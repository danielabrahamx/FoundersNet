{
  "version": 3,
  "sources": [
    "prediction_market.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DQ;;AAAa;;AAAb;AACA;AAAqB;AAArB;AACA;AAAmB;AAAnB;AAhBR;;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;AAwBK;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AASG;;AAAA;AAAA;AACA;AAAqB;AAArB;AACA;AAAmB;AAAnB;AAXH;AAAA;AAaA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBU;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAP;AAGO;AAAA;AAAkB;;AAAlB;AAAP;AAGA;AAAA;AAAA;AAAA;AAAsB;AAAtB;AAAA;AAAA;;AAAA;AAKa;AADD;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAaZ;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAGA;;AAAA;;AAAA;AAAA;AAAA;;AAAiD;;AAAjD;AAGI;;;;;;;;;;;;;;;;AAAA;;AAAA;AAAJ;AA9CH;AAAA;AAAA;AAAA;AAAA;AAAA;AAkDA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA0BU;;AAAA;AAAmB;AAAA;AAAA;AAAA;AAAnB;AAAP;AAGQ;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAJ;AAAP;AAGO;;AAA0B;AAAA;;AAAA;AAAA;AAAA;AAA1B;AAAP;AAGO;AAAA;;AAAA;AAAA;;AAAP;AAAA;AACO;AAAA;;AAAoB;;AAApB;AAAP;AAGA;AAAA;AAAA;AAAA;AAAoB;AAApB;AAAA;AAAA;;AAAA;AAKW;AAAA;AAAA;;AAEa;;AAEb;;AAAA;AALD;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAME;;AANF;AAUV;;AAAA;;AAAA;AAAA;AAAA;AAIqB;;AADS;;AAC3B;AAAA;AAAA;AAAA;;AAAX;;;AAC4B;AAAA;AAAA;AAChB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AACA;;AAAA;;AAAA;AAMa;;AAAA;;AAAA;AAAA;AAAA;AAAA;AACjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AACA;;AAAA;;AAAA;AAGG;;AAAA;AAAA;AAAX;;;AAC+C;;AAAA;;AAAA;AAAA;AAAA;AAA8B;AAA9B;AAAZ;AAAvB;;AAAA;AAAA;;AACqC;AAAA;;AAAA;AAAA;;AAAA;AAAZ;AAAzB;;AAAA;;AAMJ;;AAAA;AAAA;;AAAA;;AAAA;AAGI;;;;;;;;;;;;;AAAA;;AAAA;AAAJ;AArFH;AAAA;AA8EyC;;AAAA;;AAAA;AAAA;AAAA;AAA6B;AAA7B;AAAZ;AAAtB;;AAAA;AAAA;;AACoC;AAAA;;AAAA;AAAA;;AAAA;AAAZ;AAAxB;;AAAA;;;;;AAdW;;;;AAAA;;AAAA;AACX;AAAA;AAAA;;AAAA;AAAA;;;;AAqBP;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBU;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAP;AAGO;;AAAA;AAAmB;AAAA;AAAA;AAAA;AAAnB;AAAP;AAGQ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAGG;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAJ;AAAP;AAGA;;;AAAA;AAAA;AACA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAGA;;AAAA;;AAAA;AAGI;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAJ;AAnCH;AAAA;AAqCA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAiBU;AAAA;AAAiB;AAAA;AAAA;AAAA;AAAjB;AAAP;AAGM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGC;;AAAc;;AAAA;;;AAAd;AAAP;AAGW;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAJ;AAAP;AAGoB;AAAA;;;AAAZ;AAAA;AAAA;AAGD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAP;AAGO;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAsB;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAtB;;AAAA;AAAP;AAGa;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAgC;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAhC;;AAAA;AAAA;AACE;;;;;AAGL;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAD;;AAAA;AAGT;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAIA;AACa;;;;;;;AADb;;;AAGQ;;;AAHR;AAOI;;;;;;;;;;;;;;;;;;;AAAA;;AAAA;AAAJ;AAxDH;AAAA;;;;;;;;;;AA0DA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAWY;;AAAA;AAEE;;AAAR;AAAA;AAAA;AAAA;AAAA;;AAAX;;;AACsB;AAAA;AAAA;AAAA;AAAA;AAAA;;AACD;;;AAArB;;AAAA;;AAAA;AAAA;;;AACyB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACN;AAAiB;AAAA;AAAA;AAAA;AAAjB;AAAnB;;;AAC0B;;AAAA;;AAAA;AAAA;AAAA;AACN;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAJC;;AAAA;AAAA;;;;;;AAfhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAuBA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAcU;AAAA;AAAmB;AAAA;AAAA;AAAA;AAAnB;AAAP;AAEQ;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AACD;AAjBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAcU;AAAA;AAAmB;AAAA;AAAA;AAAA;AAAnB;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;AAfV;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAyBY;;AAEU;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAH;AAAxB;AAAA;;AAAA;AAAA;;;AACuB;AAAA;AACH;AAAA;AAAA;AAAA;AAAA;AACR;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;;AAAA;;AAAA;;;;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AAHK;AAAA;AAAA;;;;;;AAVZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAyBsB;;AAAA;;AAAA;AAAZ;AARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBU;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAA;;AAAA;AAAP;AAGkB;;AAAA;;AAAA;AACJ;;AACM;AAEpB;AAAA;AAGA;;;;;AAAA;;;AAGQ;;;AAHR;AAOI;;;;;;;;;;;;;;;;;;;;;AAAJ;AA3BH;AAAA;AAqCuB;AAAA;;AAAA;AAAA;AARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBsB;AAAA;AAAA;AAAA;AAAZ;AARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBsB;AAAA;AAAA;AAAA;AAAZ;AARV;AAAA;AAAA;AAAA;AAAA;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 8 2"
    },
    "7": {
      "op": "bytecblock \"event_counter\" 0x151f7c75 \"bet_counter\" \"events\" 0x00 \"admin\" 0x0000 \"bets\" \"event_bets\" \"user_bets\""
    },
    "84": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "86": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "89": {
      "op": "bytec 5 // \"admin\"",
      "defined_out": [
        "\"admin\""
      ],
      "stack_out": [
        "\"admin\""
      ]
    },
    "91": {
      "op": "global ZeroAddress",
      "defined_out": [
        "\"admin\"",
        "tmp%0#2"
      ],
      "stack_out": [
        "\"admin\"",
        "tmp%0#2"
      ]
    },
    "93": {
      "op": "app_global_put",
      "stack_out": []
    },
    "94": {
      "op": "bytec_0 // \"event_counter\"",
      "defined_out": [
        "\"event_counter\""
      ],
      "stack_out": [
        "\"event_counter\""
      ]
    },
    "95": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"event_counter\"",
        "0"
      ],
      "stack_out": [
        "\"event_counter\"",
        "0"
      ]
    },
    "96": {
      "op": "app_global_put",
      "stack_out": []
    },
    "97": {
      "op": "bytec_2 // \"bet_counter\"",
      "defined_out": [
        "\"bet_counter\""
      ],
      "stack_out": [
        "\"bet_counter\""
      ]
    },
    "98": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"bet_counter\"",
        "0"
      ]
    },
    "99": {
      "op": "app_global_put",
      "stack_out": []
    },
    "100": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "102": {
      "op": "!",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "103": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "104": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "106": {
      "op": "bz main_create_NoOp@19",
      "stack_out": []
    },
    "109": {
      "op": "pushbytess 0xdba3036e 0x6f71d111 0xbb54b524 0x7b37dfda 0xa365fd51 0x0c237eda 0xe437dd73 0x788d5cf9 0x17ab816e 0xa2ebc461 0x346b3dbc 0xa6ed4cc3 0x1ef5e8d5 // method \"create_event(string,uint64)uint64\", method \"place_bet(uint64,bool,pay)void\", method \"resolve_event(uint64,bool)void\", method \"claim_winnings(uint64)void\", method \"get_user_bets(address)(uint64,uint64,address,bool,uint64,bool)[]\", method \"get_total_bets(uint64)(uint64,uint64)\", method \"get_event(uint64)(uint64,string,uint64,bool,bool,uint64,uint64,uint64,uint64)\", method \"get_all_events()(uint64,string,uint64,bool,bool,uint64,uint64,uint64,uint64)[]\", method \"get_contract_balance()uint64\", method \"emergency_withdraw()void\", method \"get_admin()address\", method \"get_event_counter()uint64\", method \"get_bet_counter()uint64\"",
      "defined_out": [
        "Method(claim_winnings(uint64)void)",
        "Method(create_event(string,uint64)uint64)",
        "Method(emergency_withdraw()void)",
        "Method(get_admin()address)",
        "Method(get_all_events()(uint64,string,uint64,bool,bool,uint64,uint64,uint64,uint64)[])",
        "Method(get_bet_counter()uint64)",
        "Method(get_contract_balance()uint64)",
        "Method(get_event(uint64)(uint64,string,uint64,bool,bool,uint64,uint64,uint64,uint64))",
        "Method(get_event_counter()uint64)",
        "Method(get_total_bets(uint64)(uint64,uint64))",
        "Method(get_user_bets(address)(uint64,uint64,address,bool,uint64,bool)[])",
        "Method(place_bet(uint64,bool,pay)void)",
        "Method(resolve_event(uint64,bool)void)"
      ],
      "stack_out": [
        "Method(create_event(string,uint64)uint64)",
        "Method(place_bet(uint64,bool,pay)void)",
        "Method(resolve_event(uint64,bool)void)",
        "Method(claim_winnings(uint64)void)",
        "Method(get_user_bets(address)(uint64,uint64,address,bool,uint64,bool)[])",
        "Method(get_total_bets(uint64)(uint64,uint64))",
        "Method(get_event(uint64)(uint64,string,uint64,bool,bool,uint64,uint64,uint64,uint64))",
        "Method(get_all_events()(uint64,string,uint64,bool,bool,uint64,uint64,uint64,uint64)[])",
        "Method(get_contract_balance()uint64)",
        "Method(emergency_withdraw()void)",
        "Method(get_admin()address)",
        "Method(get_event_counter()uint64)",
        "Method(get_bet_counter()uint64)"
      ]
    },
    "176": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(claim_winnings(uint64)void)",
        "Method(create_event(string,uint64)uint64)",
        "Method(emergency_withdraw()void)",
        "Method(get_admin()address)",
        "Method(get_all_events()(uint64,string,uint64,bool,bool,uint64,uint64,uint64,uint64)[])",
        "Method(get_bet_counter()uint64)",
        "Method(get_contract_balance()uint64)",
        "Method(get_event(uint64)(uint64,string,uint64,bool,bool,uint64,uint64,uint64,uint64))",
        "Method(get_event_counter()uint64)",
        "Method(get_total_bets(uint64)(uint64,uint64))",
        "Method(get_user_bets(address)(uint64,uint64,address,bool,uint64,bool)[])",
        "Method(place_bet(uint64,bool,pay)void)",
        "Method(resolve_event(uint64,bool)void)",
        "tmp%4#0"
      ],
      "stack_out": [
        "Method(create_event(string,uint64)uint64)",
        "Method(place_bet(uint64,bool,pay)void)",
        "Method(resolve_event(uint64,bool)void)",
        "Method(claim_winnings(uint64)void)",
        "Method(get_user_bets(address)(uint64,uint64,address,bool,uint64,bool)[])",
        "Method(get_total_bets(uint64)(uint64,uint64))",
        "Method(get_event(uint64)(uint64,string,uint64,bool,bool,uint64,uint64,uint64,uint64))",
        "Method(get_all_events()(uint64,string,uint64,bool,bool,uint64,uint64,uint64,uint64)[])",
        "Method(get_contract_balance()uint64)",
        "Method(emergency_withdraw()void)",
        "Method(get_admin()address)",
        "Method(get_event_counter()uint64)",
        "Method(get_bet_counter()uint64)",
        "tmp%4#0"
      ]
    },
    "179": {
      "op": "match create_event place_bet resolve_event claim_winnings get_user_bets get_total_bets get_event get_all_events get_contract_balance emergency_withdraw get_admin get_event_counter get_bet_counter",
      "stack_out": []
    },
    "207": {
      "op": "err"
    },
    "208": {
      "block": "main_create_NoOp@19",
      "stack_in": [],
      "op": "pushbytes 0x894a716e // method \"create_application(address)void\"",
      "defined_out": [
        "Method(create_application(address)void)"
      ],
      "stack_out": [
        "Method(create_application(address)void)"
      ]
    },
    "214": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(create_application(address)void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "Method(create_application(address)void)",
        "tmp%5#0"
      ]
    },
    "217": {
      "op": "match create_application",
      "stack_out": []
    },
    "221": {
      "op": "err"
    },
    "222": {
      "subroutine": "prediction_market.PredictionMarket.create_application[routing]",
      "params": {},
      "block": "create_application",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "admin#0"
      ],
      "stack_out": [
        "admin#0"
      ]
    },
    "225": {
      "op": "dup",
      "defined_out": [
        "admin#0",
        "admin#0 (copy)"
      ],
      "stack_out": [
        "admin#0",
        "admin#0 (copy)"
      ]
    },
    "226": {
      "op": "len",
      "defined_out": [
        "admin#0",
        "len%0#0"
      ],
      "stack_out": [
        "admin#0",
        "len%0#0"
      ]
    },
    "227": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "admin#0",
        "len%0#0"
      ],
      "stack_out": [
        "admin#0",
        "len%0#0",
        "32"
      ]
    },
    "229": {
      "op": "==",
      "defined_out": [
        "admin#0",
        "eq%0#0"
      ],
      "stack_out": [
        "admin#0",
        "eq%0#0"
      ]
    },
    "230": {
      "error": "invalid number of bytes for uint8[32]",
      "op": "assert // invalid number of bytes for uint8[32]",
      "stack_out": [
        "admin#0"
      ]
    },
    "231": {
      "op": "bytec 5 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "admin#0"
      ],
      "stack_out": [
        "admin#0",
        "\"admin\""
      ]
    },
    "233": {
      "op": "swap",
      "stack_out": [
        "\"admin\"",
        "admin#0"
      ]
    },
    "234": {
      "op": "app_global_put",
      "stack_out": []
    },
    "235": {
      "op": "bytec_0 // \"event_counter\"",
      "defined_out": [
        "\"event_counter\""
      ],
      "stack_out": [
        "\"event_counter\""
      ]
    },
    "236": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"event_counter\"",
        "0"
      ],
      "stack_out": [
        "\"event_counter\"",
        "0"
      ]
    },
    "237": {
      "op": "app_global_put",
      "stack_out": []
    },
    "238": {
      "op": "bytec_2 // \"bet_counter\"",
      "defined_out": [
        "\"bet_counter\""
      ],
      "stack_out": [
        "\"bet_counter\""
      ]
    },
    "239": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"bet_counter\"",
        "0"
      ]
    },
    "240": {
      "op": "app_global_put",
      "stack_out": []
    },
    "241": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "242": {
      "op": "return",
      "stack_out": []
    },
    "243": {
      "subroutine": "prediction_market.PredictionMarket.create_event[routing]",
      "params": {},
      "block": "create_event",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "name#0"
      ],
      "stack_out": [
        "name#0"
      ]
    },
    "246": {
      "op": "dup",
      "defined_out": [
        "name#0",
        "name#0 (copy)"
      ],
      "stack_out": [
        "name#0",
        "name#0 (copy)"
      ]
    },
    "247": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "name#0",
        "name#0 (copy)"
      ],
      "stack_out": [
        "name#0",
        "name#0 (copy)",
        "0"
      ]
    },
    "248": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%0#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "aggregate%array_length%0#0"
      ]
    },
    "249": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%0#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "aggregate%array_length%0#0",
        "2"
      ]
    },
    "250": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "add%0#0"
      ]
    },
    "251": {
      "op": "dig 1",
      "stack_out": [
        "name#0",
        "add%0#0",
        "name#0 (copy)"
      ]
    },
    "253": {
      "op": "len",
      "defined_out": [
        "add%0#0",
        "len%0#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "add%0#0",
        "len%0#0"
      ]
    },
    "254": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "eq%0#0"
      ]
    },
    "255": {
      "error": "invalid number of bytes for (len+utf8[])",
      "op": "assert // invalid number of bytes for (len+utf8[])",
      "stack_out": [
        "name#0"
      ]
    },
    "256": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "end_time#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "end_time#0"
      ]
    },
    "259": {
      "op": "dup",
      "defined_out": [
        "end_time#0",
        "end_time#0 (copy)",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "end_time#0",
        "end_time#0 (copy)"
      ]
    },
    "260": {
      "op": "len",
      "defined_out": [
        "end_time#0",
        "len%1#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "end_time#0",
        "len%1#0"
      ]
    },
    "261": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "end_time#0",
        "len%1#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "end_time#0",
        "len%1#0",
        "8"
      ]
    },
    "262": {
      "op": "==",
      "defined_out": [
        "end_time#0",
        "eq%1#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "end_time#0",
        "eq%1#0"
      ]
    },
    "263": {
      "error": "invalid number of bytes for uint64",
      "op": "assert // invalid number of bytes for uint64",
      "stack_out": [
        "name#0",
        "end_time#0"
      ]
    },
    "264": {
      "op": "txn Sender",
      "defined_out": [
        "end_time#0",
        "name#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "name#0",
        "end_time#0",
        "tmp%0#1"
      ]
    },
    "266": {
      "op": "intc_0 // 0",
      "stack_out": [
        "name#0",
        "end_time#0",
        "tmp%0#1",
        "0"
      ]
    },
    "267": {
      "op": "bytec 5 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "end_time#0",
        "name#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "name#0",
        "end_time#0",
        "tmp%0#1",
        "0",
        "\"admin\""
      ]
    },
    "269": {
      "op": "app_global_get_ex",
      "defined_out": [
        "end_time#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "name#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "name#0",
        "end_time#0",
        "tmp%0#1",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "270": {
      "error": "check self.admin exists",
      "op": "assert // check self.admin exists",
      "stack_out": [
        "name#0",
        "end_time#0",
        "tmp%0#1",
        "maybe_value%0#0"
      ]
    },
    "271": {
      "op": "==",
      "defined_out": [
        "end_time#0",
        "name#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "name#0",
        "end_time#0",
        "tmp%1#1"
      ]
    },
    "272": {
      "error": "Only admin can create events",
      "op": "assert // Only admin can create events",
      "stack_out": [
        "name#0",
        "end_time#0"
      ]
    },
    "273": {
      "op": "dup",
      "stack_out": [
        "name#0",
        "end_time#0",
        "end_time#0 (copy)"
      ]
    },
    "274": {
      "op": "btoi",
      "defined_out": [
        "end_time#0",
        "name#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "name#0",
        "end_time#0",
        "tmp%2#1"
      ]
    },
    "275": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "end_time#0",
        "name#0",
        "tmp%2#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "name#0",
        "end_time#0",
        "tmp%2#1",
        "tmp%3#1"
      ]
    },
    "277": {
      "op": ">",
      "defined_out": [
        "end_time#0",
        "name#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "name#0",
        "end_time#0",
        "tmp%4#0"
      ]
    },
    "278": {
      "error": "End time must be in the future",
      "op": "assert // End time must be in the future",
      "stack_out": [
        "name#0",
        "end_time#0"
      ]
    },
    "279": {
      "op": "intc_0 // 0",
      "stack_out": [
        "name#0",
        "end_time#0",
        "0"
      ]
    },
    "280": {
      "op": "bytec_0 // \"event_counter\"",
      "defined_out": [
        "\"event_counter\"",
        "0",
        "end_time#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "end_time#0",
        "0",
        "\"event_counter\""
      ]
    },
    "281": {
      "op": "app_global_get_ex",
      "defined_out": [
        "end_time#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "end_time#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "282": {
      "error": "check self.event_counter exists",
      "op": "assert // check self.event_counter exists",
      "stack_out": [
        "name#0",
        "end_time#0",
        "maybe_value%1#0"
      ]
    },
    "283": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "end_time#0",
        "maybe_value%1#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "end_time#0",
        "maybe_value%1#0",
        "1"
      ]
    },
    "284": {
      "op": "+",
      "defined_out": [
        "current_event_id#0",
        "end_time#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "end_time#0",
        "current_event_id#0"
      ]
    },
    "285": {
      "op": "bytec_0 // \"event_counter\"",
      "stack_out": [
        "name#0",
        "end_time#0",
        "current_event_id#0",
        "\"event_counter\""
      ]
    },
    "286": {
      "op": "dig 1",
      "defined_out": [
        "\"event_counter\"",
        "current_event_id#0",
        "current_event_id#0 (copy)",
        "end_time#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "end_time#0",
        "current_event_id#0",
        "\"event_counter\"",
        "current_event_id#0 (copy)"
      ]
    },
    "288": {
      "op": "app_global_put",
      "stack_out": [
        "name#0",
        "end_time#0",
        "current_event_id#0"
      ]
    },
    "289": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "end_time#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "end_time#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "290": {
      "op": "dup",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0 (copy)",
        "end_time#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "end_time#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0 (copy)"
      ]
    },
    "291": {
      "op": "pushbytes 0x0033",
      "defined_out": [
        "0x0033",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0 (copy)",
        "end_time#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "end_time#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0 (copy)",
        "0x0033"
      ]
    },
    "295": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%val_as_bytes%0#0",
        "end_time#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "end_time#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%head%1#0"
      ]
    },
    "296": {
      "op": "uncover 2",
      "stack_out": [
        "name#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%head%1#0",
        "end_time#0"
      ]
    },
    "298": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%head%2#0"
      ]
    },
    "299": {
      "op": "pushbytes 0x000000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "0x000000000000000000000000000000000000000000000000000000000000000000",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%head%2#0",
        "0x000000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "334": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%0#0",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%head%7#0"
      ]
    },
    "335": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%head%7#0",
        "name#0"
      ]
    },
    "337": {
      "op": "concat",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "new_event#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "new_event#0"
      ]
    },
    "338": {
      "op": "bytec_3 // \"events\"",
      "defined_out": [
        "\"events\"",
        "aggregate%val_as_bytes%0#0",
        "new_event#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "new_event#0",
        "\"events\""
      ]
    },
    "339": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "new_event#0",
        "\"events\"",
        "aggregate%val_as_bytes%0#0 (copy)"
      ]
    },
    "341": {
      "op": "concat",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "new_event#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "new_event#0",
        "box_prefixed_key%0#0"
      ]
    },
    "342": {
      "op": "dup",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "new_event#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "new_event#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "343": {
      "op": "box_del",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "new_event#0",
        "{box_del}"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "new_event#0",
        "box_prefixed_key%0#0",
        "{box_del}"
      ]
    },
    "344": {
      "op": "pop",
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "new_event#0",
        "box_prefixed_key%0#0"
      ]
    },
    "345": {
      "op": "swap",
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "new_event#0"
      ]
    },
    "346": {
      "op": "box_put",
      "stack_out": [
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "347": {
      "op": "bytec 8 // \"event_bets\"",
      "defined_out": [
        "\"event_bets\"",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "\"event_bets\""
      ]
    },
    "349": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "\"event_bets\"",
        "aggregate%val_as_bytes%0#0 (copy)"
      ]
    },
    "351": {
      "op": "concat",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%1#0"
      ]
    },
    "352": {
      "op": "dup",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%1#0",
        "box_prefixed_key%1#0 (copy)"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%1#0",
        "box_prefixed_key%1#0 (copy)"
      ]
    },
    "353": {
      "op": "box_del",
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%1#0",
        "{box_del}"
      ]
    },
    "354": {
      "op": "pop",
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%1#0"
      ]
    },
    "355": {
      "op": "bytec 6 // 0x0000",
      "defined_out": [
        "0x0000",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%1#0",
        "0x0000"
      ]
    },
    "357": {
      "op": "box_put",
      "stack_out": [
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "358": {
      "op": "pushbytes 0x000c4576656e7443726561746564",
      "defined_out": [
        "0x000c4576656e7443726561746564",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "0x000c4576656e7443726561746564"
      ]
    },
    "374": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "0x000c4576656e7443726561746564",
        "aggregate%val_as_bytes%0#0 (copy)"
      ]
    },
    "376": {
      "op": "concat",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "tmp%12#0"
      ]
    },
    "377": {
      "op": "log",
      "stack_out": [
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "378": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "379": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "380": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "381": {
      "op": "log",
      "stack_out": []
    },
    "382": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "383": {
      "op": "return",
      "stack_out": []
    },
    "384": {
      "subroutine": "prediction_market.PredictionMarket.place_bet[routing]",
      "params": {},
      "block": "place_bet",
      "stack_in": [],
      "op": "txna ApplicationArgs 1"
    },
    "387": {
      "op": "dupn 2",
      "defined_out": [
        "event_id#0",
        "event_id#0 (copy)"
      ],
      "stack_out": [
        "event_id#0",
        "event_id#0",
        "event_id#0 (copy)"
      ]
    },
    "389": {
      "op": "len",
      "defined_out": [
        "event_id#0",
        "len%0#0"
      ],
      "stack_out": [
        "event_id#0",
        "event_id#0",
        "len%0#0"
      ]
    },
    "390": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "event_id#0",
        "len%0#0"
      ],
      "stack_out": [
        "event_id#0",
        "event_id#0",
        "len%0#0",
        "8"
      ]
    },
    "391": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "event_id#0"
      ],
      "stack_out": [
        "event_id#0",
        "event_id#0",
        "eq%0#0"
      ]
    },
    "392": {
      "error": "invalid number of bytes for uint64",
      "op": "assert // invalid number of bytes for uint64",
      "stack_out": [
        "event_id#0",
        "event_id#0"
      ]
    },
    "393": {
      "op": "txna ApplicationArgs 2"
    },
    "396": {
      "op": "dup",
      "defined_out": [
        "event_id#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "event_id#0",
        "outcome#0",
        "outcome#0"
      ]
    },
    "397": {
      "op": "cover 2",
      "defined_out": [
        "event_id#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "event_id#0",
        "outcome#0"
      ]
    },
    "399": {
      "op": "dup",
      "defined_out": [
        "event_id#0",
        "outcome#0",
        "outcome#0 (copy)"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "event_id#0",
        "outcome#0",
        "outcome#0 (copy)"
      ]
    },
    "400": {
      "op": "len",
      "defined_out": [
        "event_id#0",
        "len%1#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "event_id#0",
        "outcome#0",
        "len%1#0"
      ]
    },
    "401": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "event_id#0",
        "len%1#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "event_id#0",
        "outcome#0",
        "len%1#0",
        "1"
      ]
    },
    "402": {
      "op": "==",
      "defined_out": [
        "eq%1#0",
        "event_id#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "event_id#0",
        "outcome#0",
        "eq%1#0"
      ]
    },
    "403": {
      "error": "invalid number of bytes for bool8",
      "op": "assert // invalid number of bytes for bool8",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "event_id#0",
        "outcome#0"
      ]
    },
    "404": {
      "op": "txn GroupIndex",
      "defined_out": [
        "event_id#0",
        "outcome#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "event_id#0",
        "outcome#0",
        "tmp%2#0"
      ]
    },
    "406": {
      "op": "intc_1 // 1",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "event_id#0",
        "outcome#0",
        "tmp%2#0",
        "1"
      ]
    },
    "407": {
      "op": "-",
      "defined_out": [
        "event_id#0",
        "outcome#0",
        "payment#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "event_id#0",
        "outcome#0",
        "payment#0"
      ]
    },
    "408": {
      "op": "dup",
      "defined_out": [
        "event_id#0",
        "outcome#0",
        "payment#0",
        "payment#0 (copy)"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "payment#0 (copy)"
      ]
    },
    "409": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "event_id#0",
        "gtxn_type%0#0",
        "outcome#0",
        "payment#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "gtxn_type%0#0"
      ]
    },
    "411": {
      "op": "intc_1 // pay",
      "defined_out": [
        "event_id#0",
        "gtxn_type%0#0",
        "outcome#0",
        "pay",
        "payment#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "412": {
      "op": "==",
      "defined_out": [
        "event_id#0",
        "gtxn_type_matches%0#0",
        "outcome#0",
        "payment#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "413": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "event_id#0",
        "outcome#0",
        "payment#0"
      ]
    },
    "414": {
      "op": "dig 2",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "event_id#0 (copy)"
      ]
    },
    "416": {
      "op": "btoi",
      "defined_out": [
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%0#1"
      ]
    },
    "417": {
      "op": "intc_0 // 0",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%0#1",
        "0"
      ]
    },
    "418": {
      "op": "bytec_0 // \"event_counter\"",
      "defined_out": [
        "\"event_counter\"",
        "0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%0#1",
        "0",
        "\"event_counter\""
      ]
    },
    "419": {
      "op": "app_global_get_ex",
      "defined_out": [
        "event_id#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "outcome#0",
        "payment#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%0#1",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "420": {
      "error": "check self.event_counter exists",
      "op": "assert // check self.event_counter exists",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%0#1",
        "maybe_value%0#0"
      ]
    },
    "421": {
      "op": "<=",
      "defined_out": [
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%1#1"
      ]
    },
    "422": {
      "error": "Event does not exist",
      "op": "assert // Event does not exist",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "event_id#0",
        "outcome#0",
        "payment#0"
      ]
    },
    "423": {
      "op": "bytec_3 // \"events\"",
      "defined_out": [
        "\"events\"",
        "event_id#0",
        "outcome#0",
        "payment#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "\"events\""
      ]
    },
    "424": {
      "op": "dig 3",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "\"events\"",
        "event_id#0 (copy)"
      ]
    },
    "426": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "event_id#0",
        "outcome#0",
        "payment#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "box_prefixed_key%0#0"
      ]
    },
    "427": {
      "op": "dup",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "428": {
      "op": "cover 4",
      "defined_out": [
        "box_prefixed_key%0#0",
        "event_id#0",
        "outcome#0",
        "payment#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "box_prefixed_key%0#0"
      ]
    },
    "430": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "event_id#0",
        "outcome#0",
        "payment#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "431": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%1#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "box_prefixed_key%0#0",
        "event#0",
        "aggregate%box_get%1#0"
      ]
    },
    "432": {
      "op": "swap",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "box_prefixed_key%0#0",
        "aggregate%box_get%1#0",
        "event#0"
      ]
    },
    "433": {
      "op": "cover 5",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "box_prefixed_key%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "435": {
      "error": "check self.events entry exists",
      "op": "assert // check self.events entry exists",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "box_prefixed_key%0#0"
      ]
    },
    "436": {
      "op": "dup",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "437": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "18"
      ]
    },
    "439": {
      "op": "intc_1 // 1",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "18",
        "1"
      ]
    },
    "440": {
      "op": "box_extract",
      "defined_out": [
        "box%box_extract%0#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "box_prefixed_key%0#0",
        "box%box_extract%0#0"
      ]
    },
    "441": {
      "op": "intc_0 // 0",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "box_prefixed_key%0#0",
        "box%box_extract%0#0",
        "0"
      ]
    },
    "442": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%0#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "box_prefixed_key%0#0",
        "aggregate%get_bit%0#0"
      ]
    },
    "443": {
      "op": "bytec 4 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%get_bit%0#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "box_prefixed_key%0#0",
        "aggregate%get_bit%0#0",
        "0x00"
      ]
    },
    "445": {
      "op": "intc_0 // 0",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "box_prefixed_key%0#0",
        "aggregate%get_bit%0#0",
        "0x00",
        "0"
      ]
    },
    "446": {
      "op": "uncover 2",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "box_prefixed_key%0#0",
        "0x00",
        "0",
        "aggregate%get_bit%0#0"
      ]
    },
    "448": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "box_prefixed_key%0#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "449": {
      "op": "intc_0 // 0",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "box_prefixed_key%0#0",
        "aggregate%encoded_bool%0#0",
        "0"
      ]
    },
    "450": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%1#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "box_prefixed_key%0#0",
        "aggregate%get_bit%1#0"
      ]
    },
    "451": {
      "op": "!",
      "defined_out": [
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "box_prefixed_key%0#0",
        "tmp%3#0"
      ]
    },
    "452": {
      "error": "Event is already resolved",
      "op": "assert // Event is already resolved",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "box_prefixed_key%0#0"
      ]
    },
    "453": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "box_prefixed_key%0#0",
        "tmp%4#0"
      ]
    },
    "455": {
      "op": "swap",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%4#0",
        "box_prefixed_key%0#0"
      ]
    },
    "456": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "10"
      ]
    },
    "458": {
      "op": "intc_2 // 8",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "10",
        "8"
      ]
    },
    "459": {
      "op": "box_extract",
      "defined_out": [
        "box%box_extract%1#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%4#0",
        "box%box_extract%1#0"
      ]
    },
    "460": {
      "op": "btoi",
      "defined_out": [
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "461": {
      "op": "<",
      "defined_out": [
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%6#0"
      ]
    },
    "462": {
      "error": "Event betting period has ended",
      "op": "assert // Event betting period has ended",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0"
      ]
    },
    "463": {
      "op": "dup",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "payment#0 (copy)"
      ]
    },
    "464": {
      "op": "gtxns Amount",
      "defined_out": [
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%7#0"
      ]
    },
    "466": {
      "op": "dup",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%7#0",
        "tmp%7#0"
      ]
    },
    "467": {
      "op": "cover 4",
      "defined_out": [
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%7#0"
      ]
    },
    "469": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "470": {
      "error": "Bet amount must be greater than 0",
      "op": "assert // Bet amount must be greater than 0",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "event_id#0",
        "outcome#0",
        "payment#0",
        "tmp%7#0"
      ]
    },
    "471": {
      "op": "swap",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0",
        "payment#0"
      ]
    },
    "472": {
      "op": "gtxns Receiver",
      "defined_out": [
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0",
        "tmp%9#0"
      ]
    },
    "474": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%10#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "476": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%11#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0",
        "tmp%11#0"
      ]
    },
    "477": {
      "error": "Payment must be to app account",
      "op": "assert // Payment must be to app account",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0"
      ]
    },
    "478": {
      "op": "intc_0 // 0",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0",
        "0"
      ]
    },
    "479": {
      "op": "bytec_2 // \"bet_counter\"",
      "defined_out": [
        "\"bet_counter\"",
        "0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0",
        "0",
        "\"bet_counter\""
      ]
    },
    "480": {
      "op": "app_global_get_ex",
      "defined_out": [
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "outcome#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "481": {
      "error": "check self.bet_counter exists",
      "op": "assert // check self.bet_counter exists",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0",
        "maybe_value%1#0"
      ]
    },
    "482": {
      "op": "intc_1 // 1",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0",
        "maybe_value%1#0",
        "1"
      ]
    },
    "483": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "current_bet_id#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0",
        "current_bet_id#0"
      ]
    },
    "484": {
      "op": "bytec_2 // \"bet_counter\"",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0",
        "current_bet_id#0",
        "\"bet_counter\""
      ]
    },
    "485": {
      "op": "dig 1",
      "defined_out": [
        "\"bet_counter\"",
        "box_prefixed_key%0#0",
        "current_bet_id#0",
        "current_bet_id#0 (copy)",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0",
        "current_bet_id#0",
        "\"bet_counter\"",
        "current_bet_id#0 (copy)"
      ]
    },
    "487": {
      "op": "app_global_put",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0",
        "current_bet_id#0"
      ]
    },
    "488": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "489": {
      "op": "dup",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "490": {
      "op": "cover 4",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "492": {
      "op": "txn Sender",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ]
    },
    "494": {
      "op": "uncover 2",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "event_id#0",
        "outcome#0",
        "aggregate%val_as_bytes%0#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%7#0"
      ]
    },
    "496": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "event_id#0",
        "outcome#0",
        "aggregate%val_as_bytes%0#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "497": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0 (copy)",
        "aggregate%val_as_bytes%1#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "event_id#0",
        "outcome#0",
        "aggregate%val_as_bytes%0#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%0#0 (copy)"
      ]
    },
    "499": {
      "op": "uncover 5",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "outcome#0",
        "aggregate%val_as_bytes%0#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%0#0 (copy)",
        "event_id#0"
      ]
    },
    "501": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "outcome#0",
        "aggregate%val_as_bytes%0#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%1#0"
      ]
    },
    "502": {
      "op": "uncover 2",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "outcome#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%1#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ]
    },
    "504": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "outcome#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%2#0"
      ]
    },
    "505": {
      "op": "uncover 3",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%2#0",
        "outcome#0"
      ]
    },
    "507": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%3#0"
      ]
    },
    "508": {
      "op": "swap",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%head%3#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "509": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%4#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%head%4#0"
      ]
    },
    "510": {
      "op": "bytec 4 // 0x00",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%head%4#0",
        "0x00"
      ]
    },
    "512": {
      "op": "concat",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "new_bet#0",
        "outcome#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0",
        "new_bet#0"
      ]
    },
    "513": {
      "op": "bytec 7 // \"bets\"",
      "defined_out": [
        "\"bets\"",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "new_bet#0",
        "outcome#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0",
        "new_bet#0",
        "\"bets\""
      ]
    },
    "515": {
      "op": "uncover 2",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "new_bet#0",
        "\"bets\"",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "517": {
      "op": "concat",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0",
        "event#0",
        "event_id#0",
        "new_bet#0",
        "outcome#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "new_bet#0",
        "box_prefixed_key%1#0"
      ]
    },
    "518": {
      "op": "swap",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%1#0",
        "new_bet#0"
      ]
    },
    "519": {
      "op": "box_put",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "520": {
      "op": "bytec 9 // \"user_bets\"",
      "defined_out": [
        "\"user_bets\"",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "\"user_bets\""
      ]
    },
    "522": {
      "op": "txn Sender",
      "defined_out": [
        "\"user_bets\"",
        "aggregate%val_as_bytes%0#0",
        "bettor_address#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "\"user_bets\"",
        "bettor_address#0"
      ]
    },
    "524": {
      "op": "concat",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0"
      ]
    },
    "525": {
      "op": "dup",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0",
        "box_prefixed_key%2#0"
      ]
    },
    "526": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0",
        "event#0",
        "event_id#0",
        "maybe_exists%3#0",
        "outcome#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0",
        "_%0#0",
        "maybe_exists%3#0"
      ]
    },
    "527": {
      "op": "bury 1",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0",
        "maybe_exists%3#0"
      ]
    },
    "529": {
      "op": "bz place_bet_else_body@3",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0"
      ]
    },
    "532": {
      "op": "dup",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0",
        "box_prefixed_key%2#0 (copy)",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0",
        "box_prefixed_key%2#0 (copy)"
      ]
    },
    "533": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%3#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0",
        "user_bet_list#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0",
        "user_bet_list#0",
        "aggregate%box_get%3#0"
      ]
    },
    "534": {
      "error": "check self.user_bets entry exists",
      "op": "assert // check self.user_bets entry exists",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0",
        "user_bet_list#0"
      ]
    },
    "535": {
      "op": "dup",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0",
        "user_bet_list#0",
        "user_bet_list#0 (copy)"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0",
        "user_bet_list#0",
        "user_bet_list#0 (copy)"
      ]
    },
    "536": {
      "op": "dig 3",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0",
        "user_bet_list#0",
        "user_bet_list#0 (copy)",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "538": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0",
        "concat%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0",
        "user_bet_list#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0",
        "user_bet_list#0",
        "concat%0#0"
      ]
    },
    "539": {
      "op": "swap",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0",
        "concat%0#0",
        "user_bet_list#0"
      ]
    },
    "540": {
      "op": "intc_0 // 0",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0",
        "concat%0#0",
        "user_bet_list#0",
        "0"
      ]
    },
    "541": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0",
        "concat%0#0",
        "event#0",
        "event_id#0",
        "extract_uint16%0#0",
        "outcome#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "542": {
      "op": "intc_1 // 1",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "543": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0",
        "concat%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "544": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "as_bytes%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0",
        "concat%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "545": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "as_u16_bytes%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0",
        "concat%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "548": {
      "op": "replace2 0",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0",
        "user_bet_list#0"
      ]
    },
    "550": {
      "op": "dig 1",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0",
        "user_bet_list#0",
        "box_prefixed_key%2#0 (copy)"
      ]
    },
    "552": {
      "op": "box_del",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0",
        "user_bet_list#0",
        "{box_del}"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0",
        "user_bet_list#0",
        "{box_del}"
      ]
    },
    "553": {
      "op": "pop",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0",
        "user_bet_list#0"
      ]
    },
    "554": {
      "op": "box_put",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "555": {
      "block": "place_bet_after_if_else@4",
      "stack_in": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0"
      ],
      "op": "bytec 8 // \"event_bets\"",
      "defined_out": [
        "\"event_bets\""
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "\"event_bets\""
      ]
    },
    "557": {
      "op": "dig 6",
      "defined_out": [
        "\"event_bets\"",
        "event_id#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "\"event_bets\"",
        "event_id#0"
      ]
    },
    "559": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%6#0",
        "event_id#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%6#0"
      ]
    },
    "560": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%6#0",
        "box_prefixed_key%6#0 (copy)",
        "event_id#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%6#0",
        "box_prefixed_key%6#0 (copy)"
      ]
    },
    "561": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%5#0",
        "box_prefixed_key%6#0",
        "event_bet_list#0",
        "event_id#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%6#0",
        "event_bet_list#0",
        "aggregate%box_get%5#0"
      ]
    },
    "562": {
      "error": "check self.event_bets entry exists",
      "op": "assert // check self.event_bets entry exists",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%6#0",
        "event_bet_list#0"
      ]
    },
    "563": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%6#0",
        "event_bet_list#0",
        "event_bet_list#0 (copy)",
        "event_id#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%6#0",
        "event_bet_list#0",
        "event_bet_list#0 (copy)"
      ]
    },
    "564": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%6#0",
        "event_bet_list#0",
        "event_bet_list#0 (copy)",
        "event_id#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%6#0",
        "event_bet_list#0",
        "event_bet_list#0 (copy)",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "566": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%6#0",
        "concat%1#0",
        "event_bet_list#0",
        "event_id#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%6#0",
        "event_bet_list#0",
        "concat%1#0"
      ]
    },
    "567": {
      "op": "swap",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%6#0",
        "concat%1#0",
        "event_bet_list#0"
      ]
    },
    "568": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%6#0",
        "concat%1#0",
        "event_bet_list#0",
        "event_id#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%6#0",
        "concat%1#0",
        "event_bet_list#0",
        "0"
      ]
    },
    "569": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%6#0",
        "concat%1#0",
        "event_id#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%6#0",
        "concat%1#0",
        "extract_uint16%1#0"
      ]
    },
    "570": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%6#0",
        "concat%1#0",
        "event_id#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%6#0",
        "concat%1#0",
        "extract_uint16%1#0",
        "1"
      ]
    },
    "571": {
      "op": "+",
      "defined_out": [
        "add%1#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%6#0",
        "concat%1#0",
        "event_id#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%6#0",
        "concat%1#0",
        "add%1#0"
      ]
    },
    "572": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "as_bytes%1#0",
        "box_prefixed_key%6#0",
        "concat%1#0",
        "event_id#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%6#0",
        "concat%1#0",
        "as_bytes%1#0"
      ]
    },
    "573": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "as_u16_bytes%1#0",
        "box_prefixed_key%6#0",
        "concat%1#0",
        "event_id#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%6#0",
        "concat%1#0",
        "as_u16_bytes%1#0"
      ]
    },
    "576": {
      "op": "replace2 0",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%6#0",
        "event_bet_list#0"
      ]
    },
    "578": {
      "op": "dig 1",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%6#0",
        "event_bet_list#0",
        "box_prefixed_key%6#0 (copy)"
      ]
    },
    "580": {
      "op": "box_del",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%6#0",
        "event_bet_list#0",
        "event_id#0",
        "{box_del}"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%6#0",
        "event_bet_list#0",
        "{box_del}"
      ]
    },
    "581": {
      "op": "pop",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%6#0",
        "event_bet_list#0"
      ]
    },
    "582": {
      "op": "box_put",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "583": {
      "op": "dig 4",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "event_id#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "outcome#0"
      ]
    },
    "585": {
      "op": "intc_0 // 0",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "outcome#0",
        "0"
      ]
    },
    "586": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%2#0",
        "aggregate%val_as_bytes%0#0",
        "event_id#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%get_bit%2#0"
      ]
    },
    "587": {
      "op": "bz place_bet_else_body@6",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "590": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "event_id#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "592": {
      "op": "pushint 19 // 19",
      "defined_out": [
        "19",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "event_id#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "19"
      ]
    },
    "594": {
      "op": "intc_2 // 8",
      "defined_out": [
        "19",
        "8",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "event_id#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "19",
        "8"
      ]
    },
    "595": {
      "op": "box_extract",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box%box_extract%2#0",
        "box_prefixed_key%0#0",
        "event_id#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box%box_extract%2#0"
      ]
    },
    "596": {
      "op": "btoi",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "event_id#0",
        "outcome#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "tmp%24#0"
      ]
    },
    "597": {
      "op": "intc_1 // 1",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "tmp%24#0",
        "1"
      ]
    },
    "598": {
      "op": "+",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "event_id#0",
        "outcome#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "tmp%25#0"
      ]
    },
    "599": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%2#0",
        "box_prefixed_key%0#0",
        "event_id#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "600": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%2#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%2#0",
        "event#0"
      ]
    },
    "602": {
      "op": "swap",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "event#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "603": {
      "op": "replace2 19",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "event#0"
      ]
    },
    "605": {
      "op": "dup",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event#0 (copy)",
        "event_id#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "event#0",
        "event#0 (copy)"
      ]
    },
    "606": {
      "op": "pushint 35 // 35",
      "defined_out": [
        "35",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event#0 (copy)",
        "event_id#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "event#0",
        "event#0 (copy)",
        "35"
      ]
    },
    "608": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "event#0",
        "tmp%27#0"
      ]
    },
    "609": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%27#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "event#0",
        "tmp%27#0",
        "tmp%7#0"
      ]
    },
    "611": {
      "op": "+",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%29#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "event#0",
        "tmp%29#0"
      ]
    },
    "612": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%3#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "event#0",
        "aggregate%val_as_bytes%3#0"
      ]
    },
    "613": {
      "op": "replace2 35",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "event#0"
      ]
    },
    "615": {
      "op": "bury 3",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "617": {
      "block": "place_bet_after_if_else@7",
      "stack_in": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "619": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "620": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "{box_del}"
      ]
    },
    "621": {
      "op": "pop",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "622": {
      "op": "dig 3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "event#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "event#0"
      ]
    },
    "624": {
      "op": "box_put",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "625": {
      "op": "pushbytes 0x0009426574506c61636564",
      "defined_out": [
        "0x0009426574506c61636564",
        "box_prefixed_key%0#0",
        "event#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "0x0009426574506c61636564"
      ]
    },
    "638": {
      "op": "dig 1",
      "defined_out": [
        "0x0009426574506c61636564",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "event#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "0x0009426574506c61636564",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "640": {
      "op": "concat",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "tmp%40#0"
      ]
    },
    "641": {
      "op": "log",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "642": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "event#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "1"
      ]
    },
    "643": {
      "op": "return",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "644": {
      "block": "place_bet_else_body@6",
      "stack_in": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "646": {
      "op": "pushint 27 // 27",
      "defined_out": [
        "27",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "27"
      ]
    },
    "648": {
      "op": "intc_2 // 8",
      "defined_out": [
        "27",
        "8",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%0#0",
        "27",
        "8"
      ]
    },
    "649": {
      "op": "box_extract",
      "defined_out": [
        "box%box_extract%3#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box%box_extract%3#0"
      ]
    },
    "650": {
      "op": "btoi",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "tmp%31#0"
      ]
    },
    "651": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "tmp%31#0",
        "1"
      ]
    },
    "652": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "tmp%32#0"
      ]
    },
    "653": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%4#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%4#0"
      ]
    },
    "654": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%val_as_bytes%4#0",
        "box_prefixed_key%0#0",
        "event#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%4#0",
        "event#0"
      ]
    },
    "656": {
      "op": "swap",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "event#0",
        "aggregate%val_as_bytes%4#0"
      ]
    },
    "657": {
      "op": "replace2 27",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "event#0"
      ]
    },
    "659": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "event#0",
        "event#0 (copy)"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "event#0",
        "event#0 (copy)"
      ]
    },
    "660": {
      "op": "pushint 43 // 43",
      "defined_out": [
        "43",
        "box_prefixed_key%0#0",
        "event#0",
        "event#0 (copy)"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "event#0",
        "event#0 (copy)",
        "43"
      ]
    },
    "662": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "event#0",
        "tmp%34#0"
      ]
    },
    "663": {
      "op": "dig 3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%34#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "event#0",
        "tmp%34#0",
        "tmp%7#0"
      ]
    },
    "665": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%36#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "event#0",
        "tmp%36#0"
      ]
    },
    "666": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%5#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "event#0",
        "aggregate%val_as_bytes%5#0"
      ]
    },
    "667": {
      "op": "replace2 43",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "event#0"
      ]
    },
    "669": {
      "op": "bury 3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "671": {
      "op": "b place_bet_after_if_else@7"
    },
    "674": {
      "block": "place_bet_else_body@3",
      "stack_in": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0"
      ],
      "op": "pushbytes 0x0001",
      "defined_out": [
        "0x0001"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0",
        "0x0001"
      ]
    },
    "678": {
      "op": "dig 2",
      "defined_out": [
        "0x0001",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0",
        "0x0001",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "680": {
      "op": "concat",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "new_list#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0",
        "new_list#0"
      ]
    },
    "681": {
      "op": "swap",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0",
        "new_list#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "new_list#0",
        "box_prefixed_key%2#0"
      ]
    },
    "682": {
      "op": "dup",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0",
        "box_prefixed_key%2#0 (copy)",
        "new_list#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "new_list#0",
        "box_prefixed_key%2#0",
        "box_prefixed_key%2#0 (copy)"
      ]
    },
    "683": {
      "op": "box_del",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0",
        "new_list#0",
        "{box_del}"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "new_list#0",
        "box_prefixed_key%2#0",
        "{box_del}"
      ]
    },
    "684": {
      "op": "pop",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "new_list#0",
        "box_prefixed_key%2#0"
      ]
    },
    "685": {
      "op": "swap",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0",
        "box_prefixed_key%2#0",
        "new_list#0"
      ]
    },
    "686": {
      "op": "box_put",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%7#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "687": {
      "op": "b place_bet_after_if_else@4"
    },
    "690": {
      "subroutine": "prediction_market.PredictionMarket.resolve_event[routing]",
      "params": {},
      "block": "resolve_event",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "event_id#0"
      ],
      "stack_out": [
        "event_id#0"
      ]
    },
    "693": {
      "op": "dup",
      "defined_out": [
        "event_id#0",
        "event_id#0 (copy)"
      ],
      "stack_out": [
        "event_id#0",
        "event_id#0 (copy)"
      ]
    },
    "694": {
      "op": "len",
      "defined_out": [
        "event_id#0",
        "len%0#0"
      ],
      "stack_out": [
        "event_id#0",
        "len%0#0"
      ]
    },
    "695": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "event_id#0",
        "len%0#0"
      ],
      "stack_out": [
        "event_id#0",
        "len%0#0",
        "8"
      ]
    },
    "696": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "event_id#0"
      ],
      "stack_out": [
        "event_id#0",
        "eq%0#0"
      ]
    },
    "697": {
      "error": "invalid number of bytes for uint64",
      "op": "assert // invalid number of bytes for uint64",
      "stack_out": [
        "event_id#0"
      ]
    },
    "698": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "event_id#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0"
      ]
    },
    "701": {
      "op": "dup",
      "defined_out": [
        "event_id#0",
        "outcome#0",
        "outcome#0 (copy)"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "outcome#0 (copy)"
      ]
    },
    "702": {
      "op": "len",
      "defined_out": [
        "event_id#0",
        "len%1#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "len%1#0"
      ]
    },
    "703": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "event_id#0",
        "len%1#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "len%1#0",
        "1"
      ]
    },
    "704": {
      "op": "==",
      "defined_out": [
        "eq%1#0",
        "event_id#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "eq%1#0"
      ]
    },
    "705": {
      "error": "invalid number of bytes for bool8",
      "op": "assert // invalid number of bytes for bool8",
      "stack_out": [
        "event_id#0",
        "outcome#0"
      ]
    },
    "706": {
      "op": "txn Sender",
      "defined_out": [
        "event_id#0",
        "outcome#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "tmp%0#1"
      ]
    },
    "708": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "event_id#0",
        "outcome#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "tmp%0#1",
        "0"
      ]
    },
    "709": {
      "op": "bytec 5 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "event_id#0",
        "outcome#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "tmp%0#1",
        "0",
        "\"admin\""
      ]
    },
    "711": {
      "op": "app_global_get_ex",
      "defined_out": [
        "event_id#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "outcome#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "tmp%0#1",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "712": {
      "error": "check self.admin exists",
      "op": "assert // check self.admin exists",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "tmp%0#1",
        "maybe_value%0#0"
      ]
    },
    "713": {
      "op": "==",
      "defined_out": [
        "event_id#0",
        "outcome#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "tmp%1#1"
      ]
    },
    "714": {
      "error": "Only admin can resolve events",
      "op": "assert // Only admin can resolve events",
      "stack_out": [
        "event_id#0",
        "outcome#0"
      ]
    },
    "715": {
      "op": "dig 1",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "event_id#0 (copy)"
      ]
    },
    "717": {
      "op": "btoi",
      "defined_out": [
        "event_id#0",
        "outcome#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "tmp%2#0"
      ]
    },
    "718": {
      "op": "intc_0 // 0",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "tmp%2#0",
        "0"
      ]
    },
    "719": {
      "op": "bytec_0 // \"event_counter\"",
      "defined_out": [
        "\"event_counter\"",
        "0",
        "event_id#0",
        "outcome#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "tmp%2#0",
        "0",
        "\"event_counter\""
      ]
    },
    "720": {
      "op": "app_global_get_ex",
      "defined_out": [
        "event_id#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "outcome#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "721": {
      "error": "check self.event_counter exists",
      "op": "assert // check self.event_counter exists",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "tmp%2#0",
        "maybe_value%1#0"
      ]
    },
    "722": {
      "op": "<=",
      "defined_out": [
        "event_id#0",
        "outcome#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "tmp%3#0"
      ]
    },
    "723": {
      "error": "Event does not exist",
      "op": "assert // Event does not exist",
      "stack_out": [
        "event_id#0",
        "outcome#0"
      ]
    },
    "724": {
      "op": "bytec_3 // \"events\"",
      "defined_out": [
        "\"events\"",
        "event_id#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "\"events\""
      ]
    },
    "725": {
      "op": "dig 2",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "\"events\"",
        "event_id#0 (copy)"
      ]
    },
    "727": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "event_id#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0"
      ]
    },
    "728": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "event_id#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "729": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%1#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "aggregate%box_get%1#0"
      ]
    },
    "730": {
      "error": "check self.events entry exists",
      "op": "assert // check self.events entry exists",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0"
      ]
    },
    "731": {
      "op": "dig 1",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "733": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "event#0",
        "event_id#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "box_prefixed_key%0#0 (copy)",
        "18"
      ]
    },
    "735": {
      "op": "intc_1 // 1",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "box_prefixed_key%0#0 (copy)",
        "18",
        "1"
      ]
    },
    "736": {
      "op": "box_extract",
      "defined_out": [
        "box%box_extract%0#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "box%box_extract%0#0"
      ]
    },
    "737": {
      "op": "intc_0 // 0",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "box%box_extract%0#0",
        "0"
      ]
    },
    "738": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%0#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "aggregate%get_bit%0#0"
      ]
    },
    "739": {
      "op": "bytec 4 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%get_bit%0#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "aggregate%get_bit%0#0",
        "0x00"
      ]
    },
    "741": {
      "op": "intc_0 // 0",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "aggregate%get_bit%0#0",
        "0x00",
        "0"
      ]
    },
    "742": {
      "op": "uncover 2",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "0x00",
        "0",
        "aggregate%get_bit%0#0"
      ]
    },
    "744": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "745": {
      "op": "intc_0 // 0",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "aggregate%encoded_bool%0#0",
        "0"
      ]
    },
    "746": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%1#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "aggregate%get_bit%1#0"
      ]
    },
    "747": {
      "op": "!",
      "defined_out": [
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "tmp%5#0"
      ]
    },
    "748": {
      "error": "Event already resolved",
      "op": "assert // Event already resolved",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0"
      ]
    },
    "749": {
      "op": "pushint 144 // 144",
      "defined_out": [
        "144",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "outcome#0"
      ],
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "144"
      ]
    },
    "752": {
      "op": "intc_1 // 1",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0",
        "144",
        "1"
      ]
    },
    "753": {
      "op": "setbit",
      "stack_out": [
        "event_id#0",
        "outcome#0",
        "box_prefixed_key%0#0",
        "event#0"
      ]
    },
    "754": {
      "op": "uncover 2",
      "stack_out": [
        "event_id#0",
        "box_prefixed_key%0#0",
        "event#0",
        "outcome#0"
      ]
    },
    "756": {
      "op": "intc_0 // 0",
      "stack_out": [
        "event_id#0",
        "box_prefixed_key%0#0",
        "event#0",
        "outcome#0",
        "0"
      ]
    },
    "757": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%4#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0"
      ],
      "stack_out": [
        "event_id#0",
        "box_prefixed_key%0#0",
        "event#0",
        "aggregate%get_bit%4#0"
      ]
    },
    "758": {
      "op": "pushint 145 // 145"
    },
    "761": {
      "op": "swap",
      "defined_out": [
        "145",
        "aggregate%get_bit%4#0",
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0"
      ],
      "stack_out": [
        "event_id#0",
        "box_prefixed_key%0#0",
        "event#0",
        "145",
        "aggregate%get_bit%4#0"
      ]
    },
    "762": {
      "op": "setbit",
      "stack_out": [
        "event_id#0",
        "box_prefixed_key%0#0",
        "event#0"
      ]
    },
    "763": {
      "op": "dig 1",
      "stack_out": [
        "event_id#0",
        "box_prefixed_key%0#0",
        "event#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "765": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "event#0",
        "event_id#0",
        "{box_del}"
      ],
      "stack_out": [
        "event_id#0",
        "box_prefixed_key%0#0",
        "event#0",
        "{box_del}"
      ]
    },
    "766": {
      "op": "pop",
      "stack_out": [
        "event_id#0",
        "box_prefixed_key%0#0",
        "event#0"
      ]
    },
    "767": {
      "op": "box_put",
      "stack_out": [
        "event_id#0"
      ]
    },
    "768": {
      "op": "pushbytes 0x000d4576656e745265736f6c766564",
      "defined_out": [
        "0x000d4576656e745265736f6c766564",
        "event_id#0"
      ],
      "stack_out": [
        "event_id#0",
        "0x000d4576656e745265736f6c766564"
      ]
    },
    "785": {
      "op": "swap",
      "stack_out": [
        "0x000d4576656e745265736f6c766564",
        "event_id#0"
      ]
    },
    "786": {
      "op": "concat",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "787": {
      "op": "log",
      "stack_out": []
    },
    "788": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "789": {
      "op": "return",
      "stack_out": []
    },
    "790": {
      "subroutine": "prediction_market.PredictionMarket.claim_winnings[routing]",
      "params": {},
      "block": "claim_winnings",
      "stack_in": [],
      "op": "txna ApplicationArgs 1"
    },
    "793": {
      "op": "dupn 2",
      "defined_out": [
        "bet_id#0",
        "bet_id#0 (copy)"
      ],
      "stack_out": [
        "bet_id#0",
        "bet_id#0",
        "bet_id#0 (copy)"
      ]
    },
    "795": {
      "op": "len",
      "defined_out": [
        "bet_id#0",
        "len%0#0"
      ],
      "stack_out": [
        "bet_id#0",
        "bet_id#0",
        "len%0#0"
      ]
    },
    "796": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "bet_id#0",
        "len%0#0"
      ],
      "stack_out": [
        "bet_id#0",
        "bet_id#0",
        "len%0#0",
        "8"
      ]
    },
    "797": {
      "op": "==",
      "defined_out": [
        "bet_id#0",
        "eq%0#0"
      ],
      "stack_out": [
        "bet_id#0",
        "bet_id#0",
        "eq%0#0"
      ]
    },
    "798": {
      "error": "invalid number of bytes for uint64",
      "op": "assert // invalid number of bytes for uint64",
      "stack_out": [
        "bet_id#0",
        "bet_id#0"
      ]
    },
    "799": {
      "op": "dup",
      "stack_out": [
        "bet_id#0",
        "bet_id#0",
        "bet_id#0 (copy)"
      ]
    },
    "800": {
      "op": "btoi",
      "defined_out": [
        "bet_id#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "bet_id#0",
        "bet_id#0",
        "tmp%0#1"
      ]
    },
    "801": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bet_id#0",
        "bet_id#0",
        "tmp%0#1",
        "0"
      ]
    },
    "802": {
      "op": "bytec_2 // \"bet_counter\"",
      "defined_out": [
        "\"bet_counter\"",
        "0",
        "bet_id#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "bet_id#0",
        "bet_id#0",
        "tmp%0#1",
        "0",
        "\"bet_counter\""
      ]
    },
    "803": {
      "op": "app_global_get_ex",
      "defined_out": [
        "bet_id#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "bet_id#0",
        "bet_id#0",
        "tmp%0#1",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "804": {
      "error": "check self.bet_counter exists",
      "op": "assert // check self.bet_counter exists",
      "stack_out": [
        "bet_id#0",
        "bet_id#0",
        "tmp%0#1",
        "maybe_value%0#0"
      ]
    },
    "805": {
      "op": "<=",
      "defined_out": [
        "bet_id#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "bet_id#0",
        "bet_id#0",
        "tmp%1#0"
      ]
    },
    "806": {
      "error": "Bet does not exist",
      "op": "assert // Bet does not exist",
      "stack_out": [
        "bet_id#0",
        "bet_id#0"
      ]
    },
    "807": {
      "op": "bytec 7 // \"bets\"",
      "defined_out": [
        "\"bets\"",
        "bet_id#0"
      ],
      "stack_out": [
        "bet_id#0",
        "bet_id#0",
        "\"bets\""
      ]
    },
    "809": {
      "op": "swap",
      "stack_out": [
        "bet_id#0",
        "\"bets\"",
        "bet_id#0"
      ]
    },
    "810": {
      "op": "concat",
      "defined_out": [
        "bet_id#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0"
      ]
    },
    "811": {
      "op": "dup",
      "defined_out": [
        "bet_id#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "812": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%1#0",
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "aggregate%box_get%1#0"
      ]
    },
    "813": {
      "op": "swap",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "aggregate%box_get%1#0",
        "bet#0"
      ]
    },
    "814": {
      "op": "dup",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "aggregate%box_get%1#0",
        "bet#0",
        "bet#0 (copy)"
      ]
    },
    "815": {
      "op": "uncover 2",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "aggregate%box_get%1#0"
      ]
    },
    "817": {
      "error": "check self.bets entry exists",
      "op": "assert // check self.bets entry exists",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0"
      ]
    },
    "818": {
      "op": "txn Sender",
      "defined_out": [
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "tmp%2#0"
      ]
    },
    "820": {
      "op": "dig 1",
      "defined_out": [
        "bet#0",
        "bet#0 (copy)",
        "bet_id#0",
        "box_prefixed_key%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "tmp%2#0",
        "bet#0 (copy)"
      ]
    },
    "822": {
      "op": "extract 16 32",
      "defined_out": [
        "aggregate%extract%0#0",
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "tmp%2#0",
        "aggregate%extract%0#0"
      ]
    },
    "825": {
      "op": "==",
      "defined_out": [
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "tmp%3#0"
      ]
    },
    "826": {
      "error": "Not the bet owner",
      "op": "assert // Not the bet owner",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0"
      ]
    },
    "827": {
      "op": "dup",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "bet#0 (copy)"
      ]
    },
    "828": {
      "op": "pushint 456 // 456",
      "defined_out": [
        "456",
        "bet#0",
        "bet#0 (copy)",
        "bet_id#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "bet#0 (copy)",
        "456"
      ]
    },
    "831": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%0#0",
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "aggregate%get_bit%0#0"
      ]
    },
    "832": {
      "op": "bytec 4 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%get_bit%0#0",
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "aggregate%get_bit%0#0",
        "0x00"
      ]
    },
    "834": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "aggregate%get_bit%0#0",
        "0x00",
        "0"
      ]
    },
    "835": {
      "op": "uncover 2",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "0x00",
        "0",
        "aggregate%get_bit%0#0"
      ]
    },
    "837": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "838": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "aggregate%encoded_bool%0#0",
        "0"
      ]
    },
    "839": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%1#0",
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "aggregate%get_bit%1#0"
      ]
    },
    "840": {
      "op": "!",
      "defined_out": [
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "tmp%5#0"
      ]
    },
    "841": {
      "error": "Winnings already claimed",
      "op": "assert // Winnings already claimed",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0"
      ]
    },
    "842": {
      "op": "dup",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "bet#0 (copy)"
      ]
    },
    "843": {
      "op": "extract 8 8",
      "defined_out": [
        "aggregate%extract%1#0",
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "aggregate%extract%1#0"
      ]
    },
    "846": {
      "op": "bytec_3 // \"events\"",
      "defined_out": [
        "\"events\"",
        "aggregate%extract%1#0",
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "aggregate%extract%1#0",
        "\"events\""
      ]
    },
    "847": {
      "op": "swap",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "\"events\"",
        "aggregate%extract%1#0"
      ]
    },
    "848": {
      "op": "concat",
      "defined_out": [
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "box_prefixed_key%1#0"
      ]
    },
    "849": {
      "op": "dup",
      "defined_out": [
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0",
        "box_prefixed_key%1#0 (copy)"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "box_prefixed_key%1#0 (copy)"
      ]
    },
    "850": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0",
        "box_prefixed_key%1#0 (copy)"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "box_prefixed_key%1#0 (copy)",
        "18"
      ]
    },
    "852": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "18",
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0",
        "box_prefixed_key%1#0 (copy)"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "box_prefixed_key%1#0 (copy)",
        "18",
        "1"
      ]
    },
    "853": {
      "op": "box_extract",
      "defined_out": [
        "bet#0",
        "bet_id#0",
        "box%box_extract%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "box%box_extract%0#0"
      ]
    },
    "854": {
      "op": "dup",
      "defined_out": [
        "bet#0",
        "bet_id#0",
        "box%box_extract%0#0",
        "box%box_extract%0#0 (copy)",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "box%box_extract%0#0",
        "box%box_extract%0#0 (copy)"
      ]
    },
    "855": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "box%box_extract%0#0",
        "box%box_extract%0#0 (copy)",
        "0"
      ]
    },
    "856": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%2#0",
        "bet#0",
        "bet_id#0",
        "box%box_extract%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "box%box_extract%0#0",
        "aggregate%get_bit%2#0"
      ]
    },
    "857": {
      "op": "bytec 4 // 0x00",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "box%box_extract%0#0",
        "aggregate%get_bit%2#0",
        "0x00"
      ]
    },
    "859": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "box%box_extract%0#0",
        "aggregate%get_bit%2#0",
        "0x00",
        "0"
      ]
    },
    "860": {
      "op": "uncover 2",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "box%box_extract%0#0",
        "0x00",
        "0",
        "aggregate%get_bit%2#0"
      ]
    },
    "862": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%1#0",
        "bet#0",
        "bet_id#0",
        "box%box_extract%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "box%box_extract%0#0",
        "aggregate%encoded_bool%1#0"
      ]
    },
    "863": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "box%box_extract%0#0",
        "aggregate%encoded_bool%1#0",
        "0"
      ]
    },
    "864": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%3#0",
        "bet#0",
        "bet_id#0",
        "box%box_extract%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "box%box_extract%0#0",
        "aggregate%get_bit%3#0"
      ]
    },
    "865": {
      "error": "Event not resolved yet",
      "op": "assert // Event not resolved yet",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "box%box_extract%0#0"
      ]
    },
    "866": {
      "op": "uncover 2",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "box%box_extract%0#0",
        "bet#0"
      ]
    },
    "868": {
      "op": "pushint 384 // 384",
      "defined_out": [
        "384",
        "bet#0",
        "bet_id#0",
        "box%box_extract%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "box%box_extract%0#0",
        "bet#0",
        "384"
      ]
    },
    "871": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%4#0",
        "bet#0",
        "bet_id#0",
        "box%box_extract%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "box%box_extract%0#0",
        "aggregate%get_bit%4#0"
      ]
    },
    "872": {
      "op": "bytec 4 // 0x00",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "box%box_extract%0#0",
        "aggregate%get_bit%4#0",
        "0x00"
      ]
    },
    "874": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "box%box_extract%0#0",
        "aggregate%get_bit%4#0",
        "0x00",
        "0"
      ]
    },
    "875": {
      "op": "uncover 2",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "box%box_extract%0#0",
        "0x00",
        "0",
        "aggregate%get_bit%4#0"
      ]
    },
    "877": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%2#0",
        "bet#0",
        "bet_id#0",
        "box%box_extract%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "box%box_extract%0#0",
        "aggregate%encoded_bool%2#0"
      ]
    },
    "878": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "box%box_extract%0#0",
        "aggregate%encoded_bool%2#0",
        "0"
      ]
    },
    "879": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%5#0",
        "bet#0",
        "bet_id#0",
        "box%box_extract%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "box%box_extract%0#0",
        "aggregate%get_bit%5#0"
      ]
    },
    "880": {
      "op": "swap",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "aggregate%get_bit%5#0",
        "box%box_extract%0#0"
      ]
    },
    "881": {
      "op": "intc_1 // 1",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "aggregate%get_bit%5#0",
        "box%box_extract%0#0",
        "1"
      ]
    },
    "882": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%5#0",
        "aggregate%get_bit%6#0",
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "aggregate%get_bit%5#0",
        "aggregate%get_bit%6#0"
      ]
    },
    "883": {
      "op": "bytec 4 // 0x00",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "aggregate%get_bit%5#0",
        "aggregate%get_bit%6#0",
        "0x00"
      ]
    },
    "885": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "aggregate%get_bit%5#0",
        "aggregate%get_bit%6#0",
        "0x00",
        "0"
      ]
    },
    "886": {
      "op": "uncover 2",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "aggregate%get_bit%5#0",
        "0x00",
        "0",
        "aggregate%get_bit%6#0"
      ]
    },
    "888": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%3#0",
        "aggregate%get_bit%5#0",
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "aggregate%get_bit%5#0",
        "aggregate%encoded_bool%3#0"
      ]
    },
    "889": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "aggregate%get_bit%5#0",
        "aggregate%encoded_bool%3#0",
        "0"
      ]
    },
    "890": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%5#0",
        "aggregate%get_bit%7#0",
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "aggregate%get_bit%5#0",
        "aggregate%get_bit%7#0"
      ]
    },
    "891": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%get_bit%5#0",
        "aggregate%get_bit%5#0 (copy)",
        "aggregate%get_bit%7#0",
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "aggregate%get_bit%5#0",
        "aggregate%get_bit%7#0",
        "aggregate%get_bit%5#0 (copy)"
      ]
    },
    "893": {
      "op": "==",
      "defined_out": [
        "aggregate%get_bit%5#0",
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "aggregate%get_bit%5#0",
        "tmp%9#0"
      ]
    },
    "894": {
      "error": "Bet did not win",
      "op": "assert // Bet did not win",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "aggregate%get_bit%5#0"
      ]
    },
    "895": {
      "op": "dig 1",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "aggregate%get_bit%5#0",
        "box_prefixed_key%1#0 (copy)"
      ]
    },
    "897": {
      "op": "pushint 35 // 35",
      "defined_out": [
        "35",
        "aggregate%get_bit%5#0",
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0",
        "box_prefixed_key%1#0 (copy)"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "aggregate%get_bit%5#0",
        "box_prefixed_key%1#0 (copy)",
        "35"
      ]
    },
    "899": {
      "op": "intc_2 // 8",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "aggregate%get_bit%5#0",
        "box_prefixed_key%1#0 (copy)",
        "35",
        "8"
      ]
    },
    "900": {
      "op": "box_extract",
      "defined_out": [
        "aggregate%get_bit%5#0",
        "bet#0",
        "bet_id#0",
        "box%box_extract%2#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "aggregate%get_bit%5#0",
        "box%box_extract%2#0"
      ]
    },
    "901": {
      "op": "btoi",
      "defined_out": [
        "aggregate%get_bit%5#0",
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "aggregate%get_bit%5#0",
        "tmp%10#0"
      ]
    },
    "902": {
      "op": "dup",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "aggregate%get_bit%5#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ]
    },
    "903": {
      "op": "cover 2",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "box_prefixed_key%1#0",
        "tmp%10#0",
        "aggregate%get_bit%5#0",
        "tmp%10#0"
      ]
    },
    "905": {
      "op": "cover 3",
      "defined_out": [
        "aggregate%get_bit%5#0",
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "box_prefixed_key%1#0",
        "tmp%10#0",
        "aggregate%get_bit%5#0"
      ]
    },
    "907": {
      "op": "uncover 2",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%10#0",
        "aggregate%get_bit%5#0",
        "box_prefixed_key%1#0"
      ]
    },
    "909": {
      "op": "pushint 43 // 43",
      "defined_out": [
        "43",
        "aggregate%get_bit%5#0",
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%10#0",
        "aggregate%get_bit%5#0",
        "box_prefixed_key%1#0",
        "43"
      ]
    },
    "911": {
      "op": "intc_2 // 8",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%10#0",
        "aggregate%get_bit%5#0",
        "box_prefixed_key%1#0",
        "43",
        "8"
      ]
    },
    "912": {
      "op": "box_extract",
      "defined_out": [
        "aggregate%get_bit%5#0",
        "bet#0",
        "bet_id#0",
        "box%box_extract%3#0",
        "box_prefixed_key%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%10#0",
        "aggregate%get_bit%5#0",
        "box%box_extract%3#0"
      ]
    },
    "913": {
      "op": "btoi",
      "defined_out": [
        "aggregate%get_bit%5#0",
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%10#0",
        "aggregate%get_bit%5#0",
        "tmp%11#0"
      ]
    },
    "914": {
      "op": "dup",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%10#0",
        "aggregate%get_bit%5#0",
        "tmp%11#0",
        "tmp%11#0"
      ]
    },
    "915": {
      "op": "cover 3",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%10#0",
        "aggregate%get_bit%5#0",
        "tmp%11#0"
      ]
    },
    "917": {
      "op": "uncover 2",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "aggregate%get_bit%5#0",
        "tmp%11#0",
        "tmp%10#0"
      ]
    },
    "919": {
      "op": "+",
      "defined_out": [
        "aggregate%get_bit%5#0",
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "aggregate%get_bit%5#0",
        "total_pool#0"
      ]
    },
    "920": {
      "op": "swap",
      "defined_out": [
        "aggregate%get_bit%5#0",
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "aggregate%get_bit%5#0"
      ]
    },
    "921": {
      "op": "bz claim_winnings_ternary_false@3",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0"
      ]
    },
    "924": {
      "op": "dig 2",
      "defined_out": [
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "winning_pool#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "winning_pool#0"
      ]
    },
    "926": {
      "block": "claim_winnings_ternary_merge@4",
      "stack_in": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "winning_pool#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "bet#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "winning_pool#0",
        "bet#0"
      ]
    },
    "928": {
      "op": "dup",
      "defined_out": [
        "bet#0",
        "bet#0 (copy)"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "winning_pool#0",
        "bet#0",
        "bet#0 (copy)"
      ]
    },
    "929": {
      "op": "pushint 49 // 49",
      "defined_out": [
        "49",
        "bet#0",
        "bet#0 (copy)"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "winning_pool#0",
        "bet#0",
        "bet#0 (copy)",
        "49"
      ]
    },
    "931": {
      "op": "extract_uint64",
      "defined_out": [
        "bet#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "winning_pool#0",
        "bet#0",
        "tmp%14#0"
      ]
    },
    "932": {
      "op": "dig 3",
      "defined_out": [
        "bet#0",
        "tmp%14#0",
        "total_pool#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "winning_pool#0",
        "bet#0",
        "tmp%14#0",
        "total_pool#0"
      ]
    },
    "934": {
      "op": "*",
      "defined_out": [
        "bet#0",
        "tmp%15#0",
        "total_pool#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "winning_pool#0",
        "bet#0",
        "tmp%15#0"
      ]
    },
    "935": {
      "op": "uncover 2",
      "defined_out": [
        "bet#0",
        "tmp%15#0",
        "total_pool#0",
        "winning_pool#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "bet#0",
        "tmp%15#0",
        "winning_pool#0"
      ]
    },
    "937": {
      "op": "/",
      "defined_out": [
        "bet#0",
        "payout#0",
        "total_pool#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "bet#0",
        "payout#0"
      ]
    },
    "938": {
      "op": "swap",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "payout#0",
        "bet#0"
      ]
    },
    "939": {
      "op": "pushint 456 // 456",
      "defined_out": [
        "456",
        "bet#0",
        "payout#0",
        "total_pool#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "payout#0",
        "bet#0",
        "456"
      ]
    },
    "942": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "456",
        "bet#0",
        "payout#0",
        "total_pool#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "payout#0",
        "bet#0",
        "456",
        "1"
      ]
    },
    "943": {
      "op": "setbit",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "payout#0",
        "bet#0"
      ]
    },
    "944": {
      "op": "dig 6",
      "defined_out": [
        "bet#0",
        "box_prefixed_key%0#0",
        "payout#0",
        "total_pool#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "payout#0",
        "bet#0",
        "box_prefixed_key%0#0"
      ]
    },
    "946": {
      "op": "dup",
      "defined_out": [
        "bet#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "payout#0",
        "total_pool#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "payout#0",
        "bet#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "947": {
      "op": "pushint 57 // 57",
      "defined_out": [
        "57",
        "bet#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "payout#0",
        "total_pool#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "payout#0",
        "bet#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "57"
      ]
    },
    "949": {
      "op": "intc_1 // 1",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "payout#0",
        "bet#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "57",
        "1"
      ]
    },
    "950": {
      "op": "box_extract",
      "defined_out": [
        "bet#0",
        "box%box_extract%4#0",
        "box_prefixed_key%0#0",
        "payout#0",
        "total_pool#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "payout#0",
        "bet#0",
        "box_prefixed_key%0#0",
        "box%box_extract%4#0"
      ]
    },
    "951": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "bet#0",
        "box%box_extract%4#0",
        "box_prefixed_key%0#0",
        "payout#0",
        "total_pool#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "payout#0",
        "bet#0",
        "box_prefixed_key%0#0",
        "box%box_extract%4#0",
        "0"
      ]
    },
    "952": {
      "op": "intc_1 // 1",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "payout#0",
        "bet#0",
        "box_prefixed_key%0#0",
        "box%box_extract%4#0",
        "0",
        "1"
      ]
    },
    "953": {
      "op": "setbit",
      "defined_out": [
        "aggregate%updated_target%0#0",
        "bet#0",
        "box_prefixed_key%0#0",
        "payout#0",
        "total_pool#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "payout#0",
        "bet#0",
        "box_prefixed_key%0#0",
        "aggregate%updated_target%0#0"
      ]
    },
    "954": {
      "op": "pushint 57 // 57"
    },
    "956": {
      "op": "swap",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "payout#0",
        "bet#0",
        "box_prefixed_key%0#0",
        "57",
        "aggregate%updated_target%0#0"
      ]
    },
    "957": {
      "op": "box_replace",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "payout#0",
        "bet#0"
      ]
    },
    "958": {
      "op": "itxn_begin"
    },
    "959": {
      "op": "extract 16 32",
      "defined_out": [
        "aggregate%extract%3#0",
        "bet#0",
        "box_prefixed_key%0#0",
        "payout#0",
        "total_pool#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "payout#0",
        "aggregate%extract%3#0"
      ]
    },
    "962": {
      "op": "itxn_field Receiver"
    },
    "964": {
      "op": "itxn_field Amount",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0"
      ]
    },
    "966": {
      "op": "intc_1 // pay",
      "defined_out": [
        "bet#0",
        "box_prefixed_key%0#0",
        "pay",
        "total_pool#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "pay"
      ]
    },
    "967": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0"
      ]
    },
    "969": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "0"
      ]
    },
    "970": {
      "op": "itxn_field Fee",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0"
      ]
    },
    "972": {
      "op": "itxn_submit"
    },
    "973": {
      "op": "pushbytes 0x000f57696e6e696e6773436c61696d6564",
      "defined_out": [
        "0x000f57696e6e696e6773436c61696d6564",
        "bet#0",
        "box_prefixed_key%0#0",
        "total_pool#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "0x000f57696e6e696e6773436c61696d6564"
      ]
    },
    "992": {
      "op": "dig 6",
      "defined_out": [
        "0x000f57696e6e696e6773436c61696d6564",
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0",
        "total_pool#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "0x000f57696e6e696e6773436c61696d6564",
        "bet_id#0"
      ]
    },
    "994": {
      "op": "concat",
      "defined_out": [
        "bet#0",
        "bet_id#0",
        "box_prefixed_key%0#0",
        "tmp%19#0",
        "total_pool#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "tmp%19#0"
      ]
    },
    "995": {
      "op": "log",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0"
      ]
    },
    "996": {
      "op": "intc_1 // 1",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "1"
      ]
    },
    "997": {
      "op": "return",
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0"
      ]
    },
    "998": {
      "block": "claim_winnings_ternary_false@3",
      "stack_in": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "winning_pool#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "tmp%10#0",
        "tmp%11#0",
        "total_pool#0",
        "winning_pool#0"
      ]
    },
    "1000": {
      "op": "b claim_winnings_ternary_merge@4"
    },
    "1003": {
      "subroutine": "prediction_market.PredictionMarket.get_user_bets[routing]",
      "params": {},
      "block": "get_user_bets",
      "stack_in": [],
      "op": "intc_0 // 0",
      "stack_out": [
        "bet_id#0"
      ]
    },
    "1004": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0"
      ]
    },
    "1006": {
      "op": "dup",
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0"
      ]
    },
    "1007": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "user#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "user#0"
      ]
    },
    "1010": {
      "op": "dup",
      "defined_out": [
        "user#0",
        "user#0 (copy)"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "user#0",
        "user#0 (copy)"
      ]
    },
    "1011": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "user#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "user#0",
        "len%0#0"
      ]
    },
    "1012": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "len%0#0",
        "user#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "user#0",
        "len%0#0",
        "32"
      ]
    },
    "1014": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "user#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "user#0",
        "eq%0#0"
      ]
    },
    "1015": {
      "error": "invalid number of bytes for uint8[32]",
      "op": "assert // invalid number of bytes for uint8[32]",
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "user#0"
      ]
    },
    "1016": {
      "op": "bytec 6 // 0x0000",
      "defined_out": [
        "result#0",
        "user#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "user#0",
        "result#0"
      ]
    },
    "1018": {
      "op": "swap",
      "defined_out": [
        "result#0",
        "user#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "user#0"
      ]
    },
    "1019": {
      "op": "bytec 9 // \"user_bets\"",
      "defined_out": [
        "\"user_bets\"",
        "result#0",
        "user#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "user#0",
        "\"user_bets\""
      ]
    },
    "1021": {
      "op": "swap",
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "\"user_bets\"",
        "user#0"
      ]
    },
    "1022": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "result#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1023": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "result#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1024": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0",
        "result#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1025": {
      "op": "bury 1",
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1027": {
      "op": "bz get_user_bets_after_if_else@9",
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1030": {
      "op": "dup",
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1031": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "0"
      ]
    },
    "1032": {
      "op": "intc_3 // 2",
      "defined_out": [
        "0",
        "2",
        "box_prefixed_key%0#0",
        "result#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "0",
        "2"
      ]
    },
    "1033": {
      "op": "box_extract",
      "defined_out": [
        "box%box_extract%0#0",
        "box_prefixed_key%0#0",
        "result#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "box%box_extract%0#0"
      ]
    },
    "1034": {
      "op": "btoi",
      "defined_out": [
        "box%array_length%0#0",
        "box_prefixed_key%0#0",
        "result#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "box%array_length%0#0"
      ]
    },
    "1035": {
      "op": "bury 4",
      "defined_out": [
        "box%array_length%0#0",
        "box_prefixed_key%0#0",
        "result#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1037": {
      "op": "intc_0 // 0",
      "defined_out": [
        "box%array_length%0#0",
        "box_prefixed_key%0#0",
        "i#0",
        "result#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "i#0"
      ]
    },
    "1038": {
      "op": "bury 3",
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1040": {
      "block": "get_user_bets_for_header@3",
      "stack_in": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "i#0"
      ]
    },
    "1042": {
      "op": "dig 4",
      "defined_out": [
        "box%array_length%0#0",
        "i#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "i#0",
        "box%array_length%0#0"
      ]
    },
    "1044": {
      "op": "<",
      "defined_out": [
        "box%array_length%0#0",
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "continue_looping%0#0"
      ]
    },
    "1045": {
      "op": "bz get_user_bets_after_if_else@9",
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1048": {
      "op": "dig 2",
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "i#0"
      ]
    },
    "1050": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "box%array_length%0#0",
        "i#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "i#0",
        "8"
      ]
    },
    "1051": {
      "op": "*",
      "defined_out": [
        "box%array_length%0#0",
        "box%element_offset%0#0",
        "i#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "box%element_offset%0#0"
      ]
    },
    "1052": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "box%array_length%0#0",
        "box%element_offset%0#0",
        "i#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "box%element_offset%0#0",
        "2"
      ]
    },
    "1053": {
      "op": "+",
      "defined_out": [
        "box%array_length%0#0",
        "box%offset%0#0",
        "i#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "box%offset%0#0"
      ]
    },
    "1054": {
      "op": "dig 1",
      "defined_out": [
        "box%array_length%0#0",
        "box%offset%0#0",
        "box_prefixed_key%0#0",
        "i#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "box%offset%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1056": {
      "op": "swap",
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "box%offset%0#0"
      ]
    },
    "1057": {
      "op": "intc_2 // 8",
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "box%offset%0#0",
        "8"
      ]
    },
    "1058": {
      "op": "box_extract",
      "defined_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "box_prefixed_key%0#0",
        "i#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "bet_id#0"
      ]
    },
    "1059": {
      "op": "dup",
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "bet_id#0",
        "bet_id#0"
      ]
    },
    "1060": {
      "op": "bury 6",
      "defined_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "box_prefixed_key%0#0",
        "i#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "bet_id#0"
      ]
    },
    "1062": {
      "op": "btoi",
      "defined_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "box_prefixed_key%0#0",
        "i#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "tmp%1#1"
      ]
    },
    "1063": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "tmp%1#1",
        "0"
      ]
    },
    "1064": {
      "op": "bytec_2 // \"bet_counter\"",
      "defined_out": [
        "\"bet_counter\"",
        "0",
        "bet_id#0",
        "box%array_length%0#0",
        "box_prefixed_key%0#0",
        "i#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "tmp%1#1",
        "0",
        "\"bet_counter\""
      ]
    },
    "1065": {
      "op": "app_global_get_ex",
      "defined_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "box_prefixed_key%0#0",
        "i#0",
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "tmp%1#1",
        "maybe_value%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1066": {
      "error": "check self.bet_counter exists",
      "op": "assert // check self.bet_counter exists",
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "tmp%1#1",
        "maybe_value%0#0"
      ]
    },
    "1067": {
      "op": "<=",
      "defined_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "box_prefixed_key%0#0",
        "i#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "tmp%2#1"
      ]
    },
    "1068": {
      "op": "bz get_user_bets_after_if_else@6",
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1071": {
      "op": "bytec 7 // \"bets\"",
      "defined_out": [
        "\"bets\"",
        "bet_id#0",
        "box%array_length%0#0",
        "box_prefixed_key%0#0",
        "i#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "\"bets\""
      ]
    },
    "1073": {
      "op": "dig 5",
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "\"bets\"",
        "bet_id#0"
      ]
    },
    "1075": {
      "op": "concat",
      "defined_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0",
        "i#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0"
      ]
    },
    "1076": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%1#0",
        "bet#0",
        "bet_id#0",
        "box%array_length%0#0",
        "box_prefixed_key%0#0",
        "i#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "aggregate%box_get%1#0"
      ]
    },
    "1077": {
      "error": "check self.bets entry exists",
      "op": "assert // check self.bets entry exists",
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "bet#0"
      ]
    },
    "1078": {
      "op": "dig 2",
      "defined_out": [
        "bet#0",
        "bet_id#0",
        "box%array_length%0#0",
        "box_prefixed_key%0#0",
        "i#0",
        "result#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "bet#0",
        "result#0"
      ]
    },
    "1080": {
      "op": "dup"
    },
    "1081": {
      "op": "uncover 2",
      "defined_out": [
        "bet#0",
        "bet_id#0",
        "box%array_length%0#0",
        "box_prefixed_key%0#0",
        "i#0",
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "result#0",
        "result#0 (copy)",
        "bet#0"
      ]
    },
    "1083": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "box_prefixed_key%0#0",
        "concat%0#0",
        "i#0",
        "result#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "result#0",
        "concat%0#0"
      ]
    },
    "1084": {
      "op": "swap",
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "concat%0#0",
        "result#0"
      ]
    },
    "1085": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "concat%0#0",
        "result#0",
        "0"
      ]
    },
    "1086": {
      "op": "extract_uint16",
      "defined_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "box_prefixed_key%0#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0",
        "result#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "1087": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "bet_id#0",
        "box%array_length%0#0",
        "box_prefixed_key%0#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0",
        "result#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "1088": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "bet_id#0",
        "box%array_length%0#0",
        "box_prefixed_key%0#0",
        "concat%0#0",
        "i#0",
        "result#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "1089": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "bet_id#0",
        "box%array_length%0#0",
        "box_prefixed_key%0#0",
        "concat%0#0",
        "i#0",
        "result#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "1090": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "bet_id#0",
        "box%array_length%0#0",
        "box_prefixed_key%0#0",
        "concat%0#0",
        "i#0",
        "result#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "1093": {
      "op": "replace2 0",
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "result#0"
      ]
    },
    "1095": {
      "op": "bury 2",
      "defined_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "box_prefixed_key%0#0",
        "i#0",
        "result#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1097": {
      "block": "get_user_bets_after_if_else@6",
      "stack_in": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "i#0"
      ]
    },
    "1099": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "i#0",
        "1"
      ]
    },
    "1100": {
      "op": "+",
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "i#0"
      ]
    },
    "1101": {
      "op": "bury 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1103": {
      "op": "b get_user_bets_for_header@3"
    },
    "1106": {
      "block": "get_user_bets_after_if_else@9",
      "stack_in": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0"
      ],
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "0x151f7c75"
      ]
    },
    "1107": {
      "op": "dig 2",
      "defined_out": [
        "0x151f7c75",
        "result#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "0x151f7c75",
        "result#0"
      ]
    },
    "1109": {
      "op": "concat",
      "defined_out": [
        "result#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "tmp%2#0"
      ]
    },
    "1110": {
      "op": "log",
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1111": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "result#0"
      ],
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0",
        "1"
      ]
    },
    "1112": {
      "op": "return",
      "stack_out": [
        "bet_id#0",
        "box%array_length%0#0",
        "i#0",
        "result#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1113": {
      "subroutine": "prediction_market.PredictionMarket.get_total_bets[routing]",
      "params": {},
      "block": "get_total_bets",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "event_id#0"
      ],
      "stack_out": [
        "event_id#0"
      ]
    },
    "1116": {
      "op": "dup",
      "defined_out": [
        "event_id#0",
        "event_id#0 (copy)"
      ],
      "stack_out": [
        "event_id#0",
        "event_id#0 (copy)"
      ]
    },
    "1117": {
      "op": "len",
      "defined_out": [
        "event_id#0",
        "len%0#0"
      ],
      "stack_out": [
        "event_id#0",
        "len%0#0"
      ]
    },
    "1118": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "event_id#0",
        "len%0#0"
      ],
      "stack_out": [
        "event_id#0",
        "len%0#0",
        "8"
      ]
    },
    "1119": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "event_id#0"
      ],
      "stack_out": [
        "event_id#0",
        "eq%0#0"
      ]
    },
    "1120": {
      "error": "invalid number of bytes for uint64",
      "op": "assert // invalid number of bytes for uint64",
      "stack_out": [
        "event_id#0"
      ]
    },
    "1121": {
      "op": "dup",
      "stack_out": [
        "event_id#0",
        "event_id#0 (copy)"
      ]
    },
    "1122": {
      "op": "btoi",
      "defined_out": [
        "event_id#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "event_id#0",
        "tmp%0#1"
      ]
    },
    "1123": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "event_id#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "event_id#0",
        "tmp%0#1",
        "0"
      ]
    },
    "1124": {
      "op": "bytec_0 // \"event_counter\"",
      "defined_out": [
        "\"event_counter\"",
        "0",
        "event_id#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "event_id#0",
        "tmp%0#1",
        "0",
        "\"event_counter\""
      ]
    },
    "1125": {
      "op": "app_global_get_ex",
      "defined_out": [
        "event_id#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "event_id#0",
        "tmp%0#1",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1126": {
      "error": "check self.event_counter exists",
      "op": "assert // check self.event_counter exists",
      "stack_out": [
        "event_id#0",
        "tmp%0#1",
        "maybe_value%0#0"
      ]
    },
    "1127": {
      "op": "<=",
      "defined_out": [
        "event_id#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "event_id#0",
        "tmp%1#1"
      ]
    },
    "1128": {
      "error": "Event does not exist",
      "op": "assert // Event does not exist",
      "stack_out": [
        "event_id#0"
      ]
    },
    "1129": {
      "op": "bytec_3 // \"events\"",
      "defined_out": [
        "\"events\"",
        "event_id#0"
      ],
      "stack_out": [
        "event_id#0",
        "\"events\""
      ]
    },
    "1130": {
      "op": "swap",
      "stack_out": [
        "\"events\"",
        "event_id#0"
      ]
    },
    "1131": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1132": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1133": {
      "op": "pushint 19 // 19",
      "defined_out": [
        "19",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "19"
      ]
    },
    "1135": {
      "op": "intc_2 // 8",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "19",
        "8"
      ]
    },
    "1136": {
      "op": "box_extract",
      "defined_out": [
        "box%box_extract%0#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box%box_extract%0#0"
      ]
    },
    "1137": {
      "op": "swap",
      "stack_out": [
        "box%box_extract%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1138": {
      "op": "pushint 27 // 27",
      "defined_out": [
        "27",
        "box%box_extract%0#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box%box_extract%0#0",
        "box_prefixed_key%0#0",
        "27"
      ]
    },
    "1140": {
      "op": "intc_2 // 8",
      "stack_out": [
        "box%box_extract%0#0",
        "box_prefixed_key%0#0",
        "27",
        "8"
      ]
    },
    "1141": {
      "op": "box_extract",
      "defined_out": [
        "box%box_extract%0#0",
        "box%box_extract%1#0"
      ],
      "stack_out": [
        "box%box_extract%0#0",
        "box%box_extract%1#0"
      ]
    },
    "1142": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0"
      ]
    },
    "1143": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "0x151f7c75"
      ]
    },
    "1144": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%head%1#0"
      ]
    },
    "1145": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1146": {
      "op": "log",
      "stack_out": []
    },
    "1147": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1148": {
      "op": "return",
      "stack_out": []
    },
    "1149": {
      "subroutine": "prediction_market.PredictionMarket.get_event[routing]",
      "params": {},
      "block": "get_event",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "event_id#0"
      ],
      "stack_out": [
        "event_id#0"
      ]
    },
    "1152": {
      "op": "dup",
      "defined_out": [
        "event_id#0",
        "event_id#0 (copy)"
      ],
      "stack_out": [
        "event_id#0",
        "event_id#0 (copy)"
      ]
    },
    "1153": {
      "op": "len",
      "defined_out": [
        "event_id#0",
        "len%0#0"
      ],
      "stack_out": [
        "event_id#0",
        "len%0#0"
      ]
    },
    "1154": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "event_id#0",
        "len%0#0"
      ],
      "stack_out": [
        "event_id#0",
        "len%0#0",
        "8"
      ]
    },
    "1155": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "event_id#0"
      ],
      "stack_out": [
        "event_id#0",
        "eq%0#0"
      ]
    },
    "1156": {
      "error": "invalid number of bytes for uint64",
      "op": "assert // invalid number of bytes for uint64",
      "stack_out": [
        "event_id#0"
      ]
    },
    "1157": {
      "op": "dup",
      "stack_out": [
        "event_id#0",
        "event_id#0 (copy)"
      ]
    },
    "1158": {
      "op": "btoi",
      "defined_out": [
        "event_id#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "event_id#0",
        "tmp%0#1"
      ]
    },
    "1159": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "event_id#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "event_id#0",
        "tmp%0#1",
        "0"
      ]
    },
    "1160": {
      "op": "bytec_0 // \"event_counter\"",
      "defined_out": [
        "\"event_counter\"",
        "0",
        "event_id#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "event_id#0",
        "tmp%0#1",
        "0",
        "\"event_counter\""
      ]
    },
    "1161": {
      "op": "app_global_get_ex",
      "defined_out": [
        "event_id#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "event_id#0",
        "tmp%0#1",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1162": {
      "error": "check self.event_counter exists",
      "op": "assert // check self.event_counter exists",
      "stack_out": [
        "event_id#0",
        "tmp%0#1",
        "maybe_value%0#0"
      ]
    },
    "1163": {
      "op": "<=",
      "defined_out": [
        "event_id#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "event_id#0",
        "tmp%1#1"
      ]
    },
    "1164": {
      "error": "Event does not exist",
      "op": "assert // Event does not exist",
      "stack_out": [
        "event_id#0"
      ]
    },
    "1165": {
      "op": "bytec_3 // \"events\"",
      "defined_out": [
        "\"events\"",
        "event_id#0"
      ],
      "stack_out": [
        "event_id#0",
        "\"events\""
      ]
    },
    "1166": {
      "op": "swap",
      "stack_out": [
        "\"events\"",
        "event_id#0"
      ]
    },
    "1167": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1168": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "1169": {
      "error": "check self.events entry exists",
      "op": "assert // check self.events entry exists",
      "stack_out": [
        "aggregate%box_get%0#0"
      ]
    },
    "1170": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%box_get%0#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "0x151f7c75"
      ]
    },
    "1171": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%box_get%0#0"
      ]
    },
    "1172": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1173": {
      "op": "log",
      "stack_out": []
    },
    "1174": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1175": {
      "op": "return",
      "stack_out": []
    },
    "1176": {
      "subroutine": "prediction_market.PredictionMarket.get_all_events[routing]",
      "params": {},
      "block": "get_all_events",
      "stack_in": [],
      "op": "intc_0 // 0",
      "stack_out": [
        "array_head_and_tail#0"
      ]
    },
    "1177": {
      "op": "dupn 2",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0"
      ]
    },
    "1179": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0"
      ]
    },
    "1181": {
      "op": "dupn 3",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1"
      ]
    },
    "1183": {
      "op": "bytec 6 // 0x0000"
    },
    "1185": {
      "op": "intc_0 // 0"
    },
    "1186": {
      "op": "bytec_0 // \"event_counter\"",
      "defined_out": [
        "\"event_counter\"",
        "0",
        "result#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "0",
        "\"event_counter\""
      ]
    },
    "1187": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "result#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1188": {
      "error": "check self.event_counter exists",
      "op": "assert // check self.event_counter exists",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "maybe_value%0#0"
      ]
    },
    "1189": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0",
        "result#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "1190": {
      "op": "+",
      "defined_out": [
        "result#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1"
      ]
    },
    "1191": {
      "op": "intc_1 // 1",
      "defined_out": [
        "i#0",
        "result#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0"
      ]
    },
    "1192": {
      "block": "get_all_events_for_header@2",
      "stack_in": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0"
      ],
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "i#0"
      ]
    },
    "1193": {
      "op": "dig 2",
      "defined_out": [
        "i#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "i#0",
        "tmp%0#1"
      ]
    },
    "1195": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1196": {
      "op": "bz get_all_events_after_for@5",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0"
      ]
    },
    "1199": {
      "op": "dup",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "i#0"
      ]
    },
    "1200": {
      "op": "itob",
      "defined_out": [
        "event_id#0",
        "i#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "event_id#0"
      ]
    },
    "1201": {
      "op": "bytec_3 // \"events\"",
      "defined_out": [
        "\"events\"",
        "event_id#0",
        "i#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "event_id#0",
        "\"events\""
      ]
    },
    "1202": {
      "op": "swap",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "\"events\"",
        "event_id#0"
      ]
    },
    "1203": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "i#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1204": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%1#0",
        "event#0",
        "i#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "event#0",
        "aggregate%box_get%1#0"
      ]
    },
    "1205": {
      "error": "check self.events entry exists",
      "op": "assert // check self.events entry exists",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "event#0"
      ]
    },
    "1206": {
      "op": "dig 3",
      "defined_out": [
        "event#0",
        "i#0",
        "result#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "event#0",
        "result#0"
      ]
    },
    "1208": {
      "op": "dup",
      "defined_out": [
        "event#0",
        "i#0",
        "result#0",
        "result#0 (copy)",
        "tmp%0#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "event#0",
        "result#0",
        "result#0 (copy)"
      ]
    },
    "1209": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "event#0",
        "i#0",
        "result#0",
        "result#0 (copy)",
        "tmp%0#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "event#0",
        "result#0",
        "result#0 (copy)",
        "0"
      ]
    },
    "1210": {
      "op": "extract_uint16",
      "defined_out": [
        "array_items_count#0",
        "event#0",
        "i#0",
        "result#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "event#0",
        "result#0",
        "array_items_count#0"
      ]
    },
    "1211": {
      "op": "dup",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "event#0",
        "result#0",
        "array_items_count#0",
        "array_items_count#0 (copy)"
      ]
    },
    "1212": {
      "op": "cover 2",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "event#0",
        "array_items_count#0",
        "result#0",
        "array_items_count#0"
      ]
    },
    "1214": {
      "op": "bury 10",
      "defined_out": [
        "array_items_count#0",
        "event#0",
        "i#0",
        "result#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "event#0",
        "array_items_count#0",
        "result#0"
      ]
    },
    "1216": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail#0",
        "array_items_count#0",
        "event#0",
        "i#0",
        "result#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "event#0",
        "array_items_count#0",
        "array_head_and_tail#0"
      ]
    },
    "1219": {
      "op": "bury 12",
      "defined_out": [
        "array_head_and_tail#0",
        "array_items_count#0",
        "event#0",
        "i#0",
        "result#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "event#0",
        "array_items_count#0"
      ]
    },
    "1221": {
      "op": "pushbytes 0x0002",
      "defined_out": [
        "0x0002",
        "array_head_and_tail#0",
        "array_items_count#0",
        "event#0",
        "i#0",
        "result#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "event#0",
        "array_items_count#0",
        "0x0002"
      ]
    },
    "1225": {
      "op": "uncover 2",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "array_items_count#0",
        "0x0002",
        "event#0"
      ]
    },
    "1227": {
      "op": "concat",
      "defined_out": [
        "array_head_and_tail#0",
        "array_items_count#0",
        "i#0",
        "new_head_and_tail#0",
        "result#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "array_items_count#0",
        "new_head_and_tail#0"
      ]
    },
    "1228": {
      "op": "bury 9",
      "defined_out": [
        "array_head_and_tail#0",
        "array_items_count#0",
        "i#0",
        "new_head_and_tail#0",
        "result#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "array_items_count#0"
      ]
    },
    "1230": {
      "op": "pushbytes 0x",
      "defined_out": [
        "array_head_and_tail#0",
        "array_items_count#0",
        "i#0",
        "new_head#0",
        "new_head_and_tail#0",
        "result#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "array_items_count#0",
        "new_head#0"
      ]
    },
    "1232": {
      "op": "bury 10",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "array_items_count#0"
      ]
    },
    "1234": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail#0",
        "array_items_count#0",
        "i#0",
        "new_head#0",
        "new_head_and_tail#0",
        "result#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "array_items_count#0",
        "2"
      ]
    },
    "1235": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail#0",
        "array_items_count#0",
        "i#0",
        "new_head#0",
        "new_head_and_tail#0",
        "result#0",
        "tmp%0#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "tmp%1#1"
      ]
    },
    "1236": {
      "op": "bury 4",
      "defined_out": [
        "array_head_and_tail#0",
        "array_items_count#0",
        "i#0",
        "new_head#0",
        "new_head_and_tail#0",
        "result#0",
        "tmp%0#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0"
      ]
    },
    "1238": {
      "op": "intc_0 // 0",
      "defined_out": [
        "array_head_and_tail#0",
        "array_items_count#0",
        "head_offset#0",
        "i#0",
        "new_head#0",
        "new_head_and_tail#0",
        "result#0",
        "tmp%0#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0"
      ]
    },
    "1239": {
      "op": "bury 5",
      "defined_out": [
        "array_head_and_tail#0",
        "array_items_count#0",
        "head_offset#0",
        "i#0",
        "new_head#0",
        "new_head_and_tail#0",
        "result#0",
        "tmp%0#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0"
      ]
    },
    "1241": {
      "block": "get_all_events_for_header@7",
      "stack_in": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0"
      ]
    },
    "1243": {
      "op": "dig 4",
      "defined_out": [
        "head_offset#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0",
        "tmp%1#1"
      ]
    },
    "1245": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1246": {
      "op": "bz get_all_events_after_for@9",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0"
      ]
    },
    "1249": {
      "op": "dig 9",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "array_head_and_tail#0"
      ]
    },
    "1251": {
      "op": "dig 5",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "array_head_and_tail#0",
        "head_offset#0"
      ]
    },
    "1253": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "head_offset#0 (copy)",
        "tmp%1#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "array_head_and_tail#0",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "1254": {
      "op": "cover 2",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0",
        "array_head_and_tail#0",
        "head_offset#0 (copy)"
      ]
    },
    "1256": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "item_offset#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "1257": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail#0",
        "head_offset#0",
        "item_offset#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0",
        "item_offset#0",
        "2"
      ]
    },
    "1258": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tmp%1#1",
        "tmp%3#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0",
        "tmp%3#0"
      ]
    },
    "1259": {
      "op": "itob",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tmp%1#1",
        "tmp%4#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0",
        "tmp%4#0"
      ]
    },
    "1260": {
      "op": "extract 6 2",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tmp%1#1",
        "tmp%5#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0",
        "tmp%5#0"
      ]
    },
    "1263": {
      "op": "dig 10",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "new_head#0",
        "tmp%1#1",
        "tmp%5#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0",
        "tmp%5#0",
        "new_head#0"
      ]
    },
    "1265": {
      "op": "swap",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0",
        "new_head#0",
        "tmp%5#0"
      ]
    },
    "1266": {
      "op": "concat",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0",
        "new_head#0"
      ]
    },
    "1267": {
      "op": "bury 10",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "new_head#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0"
      ]
    },
    "1269": {
      "op": "intc_3 // 2",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0",
        "2"
      ]
    },
    "1270": {
      "op": "+",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0"
      ]
    },
    "1271": {
      "op": "bury 5",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "new_head#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0"
      ]
    },
    "1273": {
      "op": "b get_all_events_for_header@7"
    },
    "1276": {
      "block": "get_all_events_after_for@9",
      "stack_in": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0"
      ],
      "op": "dig 9",
      "defined_out": [
        "array_head_and_tail#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "array_head_and_tail#0"
      ]
    },
    "1278": {
      "op": "len",
      "defined_out": [
        "array_head_and_tail#0",
        "head_and_tail_length#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_and_tail_length#0"
      ]
    },
    "1279": {
      "op": "bury 6",
      "defined_out": [
        "array_head_and_tail#0",
        "head_and_tail_length#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0"
      ]
    },
    "1281": {
      "op": "intc_0 // 0",
      "defined_out": [
        "array_head_and_tail#0",
        "head_and_tail_length#0",
        "head_offset#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0"
      ]
    },
    "1282": {
      "op": "bury 5",
      "defined_out": [
        "array_head_and_tail#0",
        "head_and_tail_length#0",
        "head_offset#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0"
      ]
    },
    "1284": {
      "block": "get_all_events_for_header@10",
      "stack_in": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0"
      ]
    },
    "1286": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "head_offset#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0",
        "2"
      ]
    },
    "1287": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "head_offset#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "1288": {
      "op": "bz get_all_events_after_for@12",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0"
      ]
    },
    "1291": {
      "op": "dig 7",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "new_head_and_tail#0"
      ]
    },
    "1293": {
      "op": "dig 5",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "new_head_and_tail#0",
        "head_offset#0"
      ]
    },
    "1295": {
      "op": "dup",
      "defined_out": [
        "head_offset#0",
        "head_offset#0 (copy)",
        "new_head_and_tail#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "new_head_and_tail#0",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "1296": {
      "op": "cover 2",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "head_offset#0 (copy)"
      ]
    },
    "1298": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "new_head_and_tail#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "1299": {
      "op": "dig 7",
      "defined_out": [
        "head_and_tail_length#0",
        "head_offset#0",
        "item_offset#0",
        "new_head_and_tail#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0",
        "item_offset#0",
        "head_and_tail_length#0"
      ]
    },
    "1301": {
      "op": "+",
      "defined_out": [
        "head_and_tail_length#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0",
        "tmp%10#0"
      ]
    },
    "1302": {
      "op": "itob",
      "defined_out": [
        "head_and_tail_length#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0",
        "tmp%11#0"
      ]
    },
    "1303": {
      "op": "extract 6 2",
      "defined_out": [
        "head_and_tail_length#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0",
        "tmp%12#0"
      ]
    },
    "1306": {
      "op": "dig 10",
      "defined_out": [
        "head_and_tail_length#0",
        "head_offset#0",
        "new_head#0",
        "new_head_and_tail#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0",
        "tmp%12#0",
        "new_head#0"
      ]
    },
    "1308": {
      "op": "swap",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0",
        "new_head#0",
        "tmp%12#0"
      ]
    },
    "1309": {
      "op": "concat",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0",
        "new_head#0"
      ]
    },
    "1310": {
      "op": "bury 10",
      "defined_out": [
        "head_and_tail_length#0",
        "head_offset#0",
        "new_head#0",
        "new_head_and_tail#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0"
      ]
    },
    "1312": {
      "op": "intc_3 // 2",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0",
        "2"
      ]
    },
    "1313": {
      "op": "+",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "head_offset#0"
      ]
    },
    "1314": {
      "op": "bury 5",
      "defined_out": [
        "head_and_tail_length#0",
        "head_offset#0",
        "new_head#0",
        "new_head_and_tail#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0"
      ]
    },
    "1316": {
      "op": "b get_all_events_for_header@10"
    },
    "1319": {
      "block": "get_all_events_after_for@12",
      "stack_in": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0"
      ],
      "op": "dig 6",
      "defined_out": [
        "array_items_count#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "array_items_count#0"
      ]
    },
    "1321": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array_items_count#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "array_items_count#0",
        "1"
      ]
    },
    "1322": {
      "op": "+",
      "defined_out": [
        "array_items_count#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "tmp%14#0"
      ]
    },
    "1323": {
      "op": "itob",
      "defined_out": [
        "array_items_count#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "tmp%15#0"
      ]
    },
    "1324": {
      "op": "extract 6 2",
      "defined_out": [
        "array_items_count#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "tmp%16#0"
      ]
    },
    "1327": {
      "op": "dig 9",
      "defined_out": [
        "array_items_count#0",
        "new_head#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "tmp%16#0",
        "new_head#0"
      ]
    },
    "1329": {
      "op": "concat",
      "defined_out": [
        "array_items_count#0",
        "new_head#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "tmp%17#0"
      ]
    },
    "1330": {
      "op": "dig 10",
      "defined_out": [
        "array_head_and_tail#0",
        "array_items_count#0",
        "new_head#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "tmp%17#0",
        "array_head_and_tail#0"
      ]
    },
    "1332": {
      "op": "dig 5",
      "defined_out": [
        "array_head_and_tail#0",
        "array_items_count#0",
        "new_head#0",
        "tmp%1#1",
        "tmp%17#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "tmp%17#0",
        "array_head_and_tail#0",
        "tmp%1#1"
      ]
    },
    "1334": {
      "op": "dig 8",
      "defined_out": [
        "array_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "new_head#0",
        "tmp%1#1",
        "tmp%17#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "tmp%17#0",
        "array_head_and_tail#0",
        "tmp%1#1",
        "head_and_tail_length#0"
      ]
    },
    "1336": {
      "op": "substring3",
      "defined_out": [
        "array_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "new_head#0",
        "tmp%1#1",
        "tmp%17#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "tmp%17#0",
        "tmp%19#0"
      ]
    },
    "1337": {
      "op": "concat",
      "defined_out": [
        "array_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "new_head#0",
        "tmp%1#1",
        "tmp%20#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "tmp%20#0"
      ]
    },
    "1338": {
      "op": "dig 8",
      "defined_out": [
        "array_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "new_head#0",
        "new_head_and_tail#0",
        "tmp%1#1",
        "tmp%20#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "tmp%20#0",
        "new_head_and_tail#0"
      ]
    },
    "1340": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "new_head#0",
        "new_head_and_tail#0",
        "tmp%1#1",
        "tmp%20#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "tmp%20#0",
        "tmp%23#0"
      ]
    },
    "1343": {
      "op": "concat",
      "defined_out": [
        "array_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "new_head#0",
        "new_head_and_tail#0",
        "result#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "result#0"
      ]
    },
    "1344": {
      "op": "bury 3",
      "defined_out": [
        "array_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "new_head#0",
        "new_head_and_tail#0",
        "result#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0"
      ]
    },
    "1346": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "i#0",
        "new_head#0",
        "new_head_and_tail#0",
        "result#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "i#0"
      ]
    },
    "1347": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1348": {
      "op": "+",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "i#0"
      ]
    },
    "1349": {
      "op": "bury 1",
      "defined_out": [
        "array_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "i#0",
        "new_head#0",
        "new_head_and_tail#0",
        "result#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0"
      ]
    },
    "1351": {
      "op": "b get_all_events_for_header@2"
    },
    "1354": {
      "block": "get_all_events_after_for@5",
      "stack_in": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0"
      ],
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "0x151f7c75"
      ]
    },
    "1355": {
      "op": "dig 3",
      "defined_out": [
        "0x151f7c75",
        "result#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "0x151f7c75",
        "result#0"
      ]
    },
    "1357": {
      "op": "concat",
      "defined_out": [
        "result#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "tmp%1#0"
      ]
    },
    "1358": {
      "op": "log",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0"
      ]
    },
    "1359": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "result#0"
      ],
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0",
        "1"
      ]
    },
    "1360": {
      "op": "return",
      "stack_out": [
        "array_head_and_tail#0",
        "new_head#0",
        "new_head_and_tail#0",
        "array_items_count#0",
        "head_and_tail_length#0",
        "head_offset#0",
        "tmp%1#1",
        "result#0",
        "tmp%0#1",
        "i#0"
      ]
    },
    "1361": {
      "subroutine": "prediction_market.PredictionMarket.get_contract_balance[routing]",
      "params": {},
      "block": "get_contract_balance",
      "stack_in": [],
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "1363": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "1365": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "value%0#0"
      ]
    },
    "1366": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "1367": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "1368": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "1369": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1370": {
      "op": "log",
      "stack_out": []
    },
    "1371": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1372": {
      "op": "return",
      "stack_out": []
    },
    "1373": {
      "subroutine": "prediction_market.PredictionMarket.emergency_withdraw[routing]",
      "params": {},
      "block": "emergency_withdraw",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1375": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1376": {
      "op": "bytec 5 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin\""
      ]
    },
    "1378": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1379": {
      "error": "check self.admin exists",
      "op": "assert // check self.admin exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1380": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ]
    },
    "1381": {
      "op": "dig 1",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "1383": {
      "op": "==",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%1#0"
      ]
    },
    "1384": {
      "error": "Only admin can emergency withdraw",
      "op": "assert // Only admin can emergency withdraw",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1385": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%2#0"
      ]
    },
    "1387": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "check%0#0",
        "current_balance#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "current_balance#0",
        "check%0#0"
      ]
    },
    "1389": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "maybe_value%0#0",
        "current_balance#0"
      ]
    },
    "1390": {
      "op": "global MinBalance",
      "defined_out": [
        "current_balance#0",
        "maybe_value%0#0",
        "min_balance#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "current_balance#0",
        "min_balance#0"
      ]
    },
    "1392": {
      "op": "-",
      "defined_out": [
        "maybe_value%0#0",
        "withdrawal_amount#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "withdrawal_amount#0"
      ]
    },
    "1393": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "withdrawal_amount#0",
        "withdrawal_amount#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "withdrawal_amount#0",
        "withdrawal_amount#0 (copy)"
      ]
    },
    "1394": {
      "error": "No balance to withdraw",
      "op": "assert // No balance to withdraw",
      "stack_out": [
        "maybe_value%0#0",
        "withdrawal_amount#0"
      ]
    },
    "1395": {
      "op": "itxn_begin"
    },
    "1396": {
      "op": "itxn_field Amount",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1398": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "1400": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "1401": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1403": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1404": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1406": {
      "op": "itxn_submit"
    },
    "1407": {
      "op": "pushbytes 0x0011456d657267656e63795769746864726177",
      "defined_out": [
        "0x0011456d657267656e63795769746864726177"
      ],
      "stack_out": [
        "0x0011456d657267656e63795769746864726177"
      ]
    },
    "1428": {
      "op": "log",
      "stack_out": []
    },
    "1429": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1430": {
      "op": "return",
      "stack_out": []
    },
    "1431": {
      "subroutine": "prediction_market.PredictionMarket.get_admin[routing]",
      "params": {},
      "block": "get_admin",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1432": {
      "op": "bytec 5 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"admin\""
      ]
    },
    "1434": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1435": {
      "error": "check self.admin exists",
      "op": "assert // check self.admin exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1436": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0x151f7c75"
      ]
    },
    "1437": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "maybe_value%0#0"
      ]
    },
    "1438": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1439": {
      "op": "log",
      "stack_out": []
    },
    "1440": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1441": {
      "op": "return",
      "stack_out": []
    },
    "1442": {
      "subroutine": "prediction_market.PredictionMarket.get_event_counter[routing]",
      "params": {},
      "block": "get_event_counter",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1443": {
      "op": "bytec_0 // \"event_counter\"",
      "defined_out": [
        "\"event_counter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"event_counter\""
      ]
    },
    "1444": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1445": {
      "error": "check self.event_counter exists",
      "op": "assert // check self.event_counter exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1446": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "1447": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "1448": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "1449": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1450": {
      "op": "log",
      "stack_out": []
    },
    "1451": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1452": {
      "op": "return",
      "stack_out": []
    },
    "1453": {
      "subroutine": "prediction_market.PredictionMarket.get_bet_counter[routing]",
      "params": {},
      "block": "get_bet_counter",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1454": {
      "op": "bytec_2 // \"bet_counter\"",
      "defined_out": [
        "\"bet_counter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"bet_counter\""
      ]
    },
    "1455": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1456": {
      "error": "check self.bet_counter exists",
      "op": "assert // check self.bet_counter exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1457": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "1458": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "1459": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "1460": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1461": {
      "op": "log",
      "stack_out": []
    },
    "1462": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1463": {
      "op": "return",
      "stack_out": []
    }
  }
}